<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DevOps Learning – Docs</title><link>https://shipengqi.github.io/devops-learn/docs/</link><description>Recent content in Docs on DevOps Learning</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://shipengqi.github.io/devops-learn/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>CPU 性能优化</title><link>https://shipengqi.github.io/devops-learn/docs/linux/perf/01_cpu/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/linux/perf/01_cpu/</guid><description/></item><item><title>iptables</title><link>https://shipengqi.github.io/devops-learn/docs/linux/firewall/01_iptables/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/linux/firewall/01_iptables/</guid><description>
&lt;p&gt;iptables 的核心工作原理可以概括为：“&lt;strong&gt;根据规则，对数据包进行过滤或处理&lt;/strong&gt;”。这些规则被组织在预定义的链（Chains） 和表（Tables） 中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tables 由 Chains 组成，而 Chains 又由规则（Rules）组成&lt;/strong&gt;。&lt;/p&gt;
&lt;h2&gt;核心思想&lt;span class="hx:absolute hx:-mt-20" id="核心思想"&gt;&lt;/span&gt;
&lt;a href="#%e6%a0%b8%e5%bf%83%e6%80%9d%e6%83%b3" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;链&lt;span class="hx:absolute hx:-mt-20" id="链"&gt;&lt;/span&gt;
&lt;a href="#%e9%93%be" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;链是规则的集合，这些规则&lt;strong&gt;按顺序排列&lt;/strong&gt;。数据包到达某个链时，会&lt;strong&gt;从第一条规则开始依次匹配，一旦匹配成功，就执行该规则定义的动作（如放行、拒绝），并停止后续匹配&lt;/strong&gt;。如果所有规则&lt;strong&gt;都不匹配，则执行该链的默认策略&lt;/strong&gt;（Policy）。&lt;/p&gt;
&lt;p&gt;系统预定义了五个最重要的链（对应数据包流经的不同阶段）：：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;INPUT&lt;/strong&gt;：处理本机接收的数据包（例如，有人 ping 你的机器或 SSH 连接到你的机器）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OUTPUT&lt;/strong&gt;：处理本机发出的数据包（例如，你从本机 ping 别人）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FORWARD&lt;/strong&gt;：处理经过本机路由的数据包（你的机器充当路由器或网关时）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PREROUTING&lt;/strong&gt;：(nat 表) 数据包刚到达防火墙，&lt;strong&gt;在进行路由判断之前&lt;/strong&gt;（可用于修改目标地址，即 DNAT）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;POSTROUTING&lt;/strong&gt;：(nat表) 数据包即将离开防火墙，&lt;strong&gt;在进行路由判断之后&lt;/strong&gt;（可用于修改源地址，即 SNAT）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;表&lt;span class="hx:absolute hx:-mt-20" id="表"&gt;&lt;/span&gt;
&lt;a href="#%e8%a1%a8" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;系统预定义了五个表，但最常用的是前两个：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;filter&lt;/code&gt; 表：&lt;strong&gt;负责过滤数据包，决定是否放行&lt;/strong&gt;。这是&lt;strong&gt;最常用&lt;/strong&gt;的表。
&lt;ul&gt;
&lt;li&gt;内置链：&lt;strong&gt;INPUT&lt;/strong&gt;, &lt;strong&gt;FORWARD&lt;/strong&gt;, &lt;strong&gt;OUTPUT&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nat&lt;/code&gt; 表：&lt;strong&gt;负责网络地址转换（NAT）&lt;/strong&gt;。
&lt;ul&gt;
&lt;li&gt;内置链：&lt;strong&gt;PREROUTING (DNAT)&lt;/strong&gt;, &lt;strong&gt;OUTPUT&lt;/strong&gt;, &lt;strong&gt;POSTROUTING (SNAT)&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mangle&lt;/code&gt; 表：&lt;strong&gt;负责修改数据包的头信息（如 TTL、TOS）&lt;/strong&gt;。
&lt;ul&gt;
&lt;li&gt;内置链：所有五个链 (&lt;strong&gt;PREROUTING&lt;/strong&gt;, &lt;strong&gt;INPUT&lt;/strong&gt;, &lt;strong&gt;FORWARD&lt;/strong&gt;, &lt;strong&gt;OUTPUT&lt;/strong&gt;, &lt;strong&gt;POSTROUTING&lt;/strong&gt;)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;raw&lt;/code&gt; 表：负责连接跟踪机制的处理（如决定是否对数据包进行状态跟踪）。
&lt;ul&gt;
&lt;li&gt;内置链：&lt;strong&gt;PREROUTING&lt;/strong&gt;, &lt;strong&gt;OUTPUT&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;security&lt;/code&gt; 表（较少用）：用于强制访问控制（MAC）网络规则。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;小结&lt;span class="hx:absolute hx:-mt-20" id="小结"&gt;&lt;/span&gt;
&lt;a href="#%e5%b0%8f%e7%bb%93" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;表和链的关系：你可以想象&lt;strong&gt;数据包流经一条“链”时，会依次经过挂在这条链上的不同“表”的规则检查&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;表的优先级顺序决定了检查的先后次序&lt;/strong&gt;：&lt;code&gt;raw -&amp;gt; mangle -&amp;gt; nat -&amp;gt; filter&lt;/code&gt;。&lt;/p&gt;
&lt;h2&gt;工作流程：数据包的一生&lt;span class="hx:absolute hx:-mt-20" id="工作流程数据包的一生"&gt;&lt;/span&gt;
&lt;a href="#%e5%b7%a5%e4%bd%9c%e6%b5%81%e7%a8%8b%e6%95%b0%e6%8d%ae%e5%8c%85%e7%9a%84%e4%b8%80%e7%94%9f" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;img src="" alt="iptables-data-flow" loading="lazy" /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;入口 (PREROUTING)&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;数据包从网卡进入系统。&lt;/li&gt;
&lt;li&gt;首先经过 &lt;strong&gt;PREROUTING&lt;/strong&gt; 链。这里会依次应用 &lt;strong&gt;raw、mangle、nat&lt;/strong&gt; 表中的规则。&lt;/li&gt;
&lt;li&gt;关键：在 &lt;strong&gt;nat&lt;/strong&gt; 表的 &lt;strong&gt;PREROUTING&lt;/strong&gt; 链中，可以做 &lt;strong&gt;DNAT（目标地址转换）&lt;/strong&gt;，&lt;strong&gt;比如把访问公网IP 80 端口的数据包转发到内网服务器的 &lt;code&gt;192.168.1.10:80&lt;/code&gt;&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;路由判断 (Routing Decision)&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;内核查看数据包的目标 IP 地址，决定这个包是发给&lt;strong&gt;本机的（走 INPUT 链）&lt;strong&gt;还是需要&lt;/strong&gt;转发的（走 FORWARD 链）&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;发给本机 (INPUT)&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;数据包进入 INPUT 链。这里会依次应用 mangle 和 filter 表中的规则。&lt;/li&gt;
&lt;li&gt;关键：在 &lt;strong&gt;filter 表的 INPUT 链&lt;/strong&gt;中，设置&lt;strong&gt;防火墙规则的主要地方&lt;/strong&gt;。比如只允许特定 IP 访问本机的 SSH 端口。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;本机进程处理&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;数据包被本机的用户进程（如 web 服务器、SSH 服务）接收和处理。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;本机发出 (OUTPUT)&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;本机进程产生新的数据包，准备发送出去。&lt;/li&gt;
&lt;li&gt;数据包进入 OUTPUT 链。这里会依次应用 raw、mangle、nat、filter 表中的规则。&lt;/li&gt;
&lt;li&gt;关键：在 &lt;strong&gt;filter 表的 OUTPUT 链&lt;/strong&gt;中，&lt;strong&gt;可以控制本机能发出哪些数据包&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;转发 (FORWARD)&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;如果数据包是转发的（第2步判断），则进入 FORWARD 链。&lt;/li&gt;
&lt;li&gt;这里会依次应用 mangle 和 filter 表中的规则。&lt;/li&gt;
&lt;li&gt;关键：在 &lt;strong&gt;filter 表的 FORWARD 链&lt;/strong&gt;中，&lt;strong&gt;设置转发规则的主要地方&lt;/strong&gt;。比如允许内网网段访问互联网，但禁止两个内网网段之间互访。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;出口 (POSTROUTING)&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;所有即将从网卡发出的数据包（&lt;strong&gt;无论是本机产生的还是转发的&lt;/strong&gt;），&lt;strong&gt;最后都要经过 POSTROUTING 链&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;这里会依次应用 mangle 和 nat 表中的规则。&lt;/li&gt;
&lt;li&gt;关键：在 &lt;strong&gt;nat 表的 POSTROUTING 链&lt;/strong&gt;中，&lt;strong&gt;可以做 SNAT（源地址转换），也就是常说的“IP伪装”（Masquerading），让内网机器共享一个公网IP上网&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;离开&lt;/strong&gt;：数据包离开网卡，前往下一个目的地。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;规则匹配与动作（Target）&lt;span class="hx:absolute hx:-mt-20" id="规则匹配与动作target"&gt;&lt;/span&gt;
&lt;a href="#%e8%a7%84%e5%88%99%e5%8c%b9%e9%85%8d%e4%b8%8e%e5%8a%a8%e4%bd%9ctarget" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;每条规则都由两部分组成：&lt;strong&gt;匹配条件&lt;/strong&gt;（Matches） 和 &lt;strong&gt;动作&lt;/strong&gt;（Target）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;匹配条件&lt;/strong&gt;：例如 &lt;code&gt;-p tcp --dport 22&lt;/code&gt;（协议是 TCP 且目标端口是 22）、&lt;code&gt;-s 192.168.1.100&lt;/code&gt;（源 IP 是 &lt;code&gt;192.168.1.100&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;动作&lt;/strong&gt;（Target）：当数据包匹配规则后要执行的操作。常见的有：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ACCEPT&lt;/strong&gt;：接受数据包，允许其通过。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DROP&lt;/strong&gt;：丢弃数据包，没有任何响应。就像对方从来没发过这个包一样。更安全。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;REJECT&lt;/strong&gt;：拒绝数据包，并向发送方返回一个 connection refused 的错误消息。更友好。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SNAT&lt;/strong&gt;：在 nat 表中使用，修改源地址。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DNAT&lt;/strong&gt;：在 nat 表中使用，修改目标地址。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MASQUERADE&lt;/strong&gt;：是 SNAT 的一种特殊形式，适用于动态获取 IP 的场合（如拨号上网）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LOG&lt;/strong&gt;：将匹配的数据包信息记录到系统日志（&lt;code&gt;/var/log/messages&lt;/code&gt; 等），然后继续匹配后续规则。用于调试。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;命令&lt;span class="hx:absolute hx:-mt-20" id="命令"&gt;&lt;/span&gt;
&lt;a href="#%e5%91%bd%e4%bb%a4" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;命令格式：&lt;code&gt;iptables [-t 表] 命令选项 [规则链] 规则&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt; 选项默认使用的是 filter 表。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;命令选项&lt;span class="hx:absolute hx:-mt-20" id="命令选项"&gt;&lt;/span&gt;
&lt;a href="#%e5%91%bd%e4%bb%a4%e9%80%89%e9%a1%b9" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-A&lt;/code&gt; (Append) 在链的末尾追加一条新规则。
&lt;ul&gt;
&lt;li&gt;例如：&lt;code&gt;iptables -A INPUT -s 192.168.1.100 -j DROP&lt;/code&gt; 表示在 INPUT 链的末尾追加一条规则，当源 IP 是 &lt;code&gt;192.168.1.100&lt;/code&gt; 时，拒绝该数据包。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-I&lt;/code&gt; (Insert) 在链的指定位置插入一条新规则（默认为第1条）。
&lt;ul&gt;
&lt;li&gt;例如：&lt;code&gt;iptables -I INPUT 3 -p tcp --dport 80 -j ACCEPT&lt;/code&gt; 表示在 INPUT 链的第 3 条位置插入一条规则，当协议是 TCP 且目标端口是 80 时，接受该数据包。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-D&lt;/code&gt; (Delete) 从链中删除一条规则。
&lt;ul&gt;
&lt;li&gt;例如：&lt;code&gt;iptables -D INPUT -s 192.168.1.100 -j DROP&lt;/code&gt; 表示从 INPUT 链中删除一条规则，当源 IP 是 &lt;code&gt;192.168.1.100&lt;/code&gt; 时，拒绝该数据包。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-F&lt;/code&gt; (Flush) 清空指定链（或所有链）的所有规则。
&lt;ul&gt;
&lt;li&gt;例如：&lt;code&gt;iptables -F INPUT&lt;/code&gt; 表示清空 INPUT 链的所有规则。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-L&lt;/code&gt; (List) 列出指定链（或所有链）的所有规则。
&lt;ul&gt;
&lt;li&gt;例如：&lt;code&gt;iptables -L -n -v&lt;/code&gt; 表示列出所有链的所有规则，且不显示 IP 地址和端口号，而是显示数字形式的 IP 地址和端口号。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-N&lt;/code&gt; (New) 创建一条新的用户自定义链。
&lt;ul&gt;
&lt;li&gt;例如：&lt;code&gt;iptables -N CUSTOM_CHAIN&lt;/code&gt; 表示创建一条名为 CUSTOM_CHAIN 的用户自定义链。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-X&lt;/code&gt; (Delete chain) 删除一条用户自定义链。
&lt;ul&gt;
&lt;li&gt;例如：&lt;code&gt;iptables -X CUSTOM_CHAIN&lt;/code&gt; 表示删除名为 CUSTOM_CHAIN 的用户自定义链。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-P&lt;/code&gt; (Policy) 设置链的默认策略（所有规则都不匹配时执行的动作）。
&lt;ul&gt;
&lt;li&gt;例如：&lt;code&gt;iptables -P INPUT DROP&lt;/code&gt; 表示设置 INPUT 链的默认策略为 DROP，即所有不匹配的数据包都被拒绝。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;规则选项&lt;span class="hx:absolute hx:-mt-20" id="规则选项"&gt;&lt;/span&gt;
&lt;a href="#%e8%a7%84%e5%88%99%e9%80%89%e9%a1%b9" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt; 输入网口&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o&lt;/code&gt; 输出网口&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt; 匹配网络协议：tcp、udp、icmp&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--icmp-type type&lt;/code&gt; 匹配 ICMP 类型，和 &lt;code&gt;-p icmp&lt;/code&gt; 配合使用。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt; 匹配来源主机（或网络）的IP地址&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--sport port&lt;/code&gt; 匹配来源主机的端口，和 &lt;code&gt;-s source-ip&lt;/code&gt; 配合使用。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt; 匹配目标主机的 IP 地址&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--dport port&lt;/code&gt; 匹配目标主机（或网络）的端口，和 &lt;code&gt;-d dest-ip&lt;/code&gt; 配合使用。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-j&lt;/code&gt; 动作：指定规则匹配后要执行的动作。
&lt;ul&gt;
&lt;li&gt;例如：&lt;code&gt;-j ACCEPT&lt;/code&gt; 表示接受该数据包。&lt;/li&gt;
&lt;li&gt;例如：&lt;code&gt;-j DROP&lt;/code&gt; 表示拒绝该数据包。&lt;/li&gt;
&lt;li&gt;例如：&lt;code&gt;-j LOG&lt;/code&gt; 表示记录该数据包的信息到系统日志。&lt;/li&gt;
&lt;li&gt;例如：&lt;code&gt;-j SNAT --to-source 192.168.1.100&lt;/code&gt; 表示修改源地址为 &lt;code&gt;192.168.1.100&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;例如：&lt;code&gt;-j DNAT --to-destination 192.168.1.100&lt;/code&gt; 表示修改目标地址为 &lt;code&gt;192.168.1.100&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;例如：&lt;strong&gt;&lt;code&gt;-j CUSTOM_CHAIN&lt;/code&gt; 表示跳转到名为 CUSTOM_CHAIN 的用户自定义链&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;例如：&lt;code&gt;-j MASQUERADE&lt;/code&gt; 表示使用动态获取的 IP 地址进行 SNAT。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;使用场景&lt;span class="hx:absolute hx:-mt-20" id="使用场景"&gt;&lt;/span&gt;
&lt;a href="#%e4%bd%bf%e7%94%a8%e5%9c%ba%e6%99%af" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 1. 设置默认策略（最严格的策略）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;iptables -P INPUT DROP &lt;span class="c1"&gt;# 默认拒绝所有入站&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;iptables -P FORWARD DROP &lt;span class="c1"&gt;# 默认拒绝所有转发&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;iptables -P OUTPUT ACCEPT &lt;span class="c1"&gt;# 默认允许所有出站（通常这样设置）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 2. 允许本地回环接口（localhost通信）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;iptables -A INPUT -i lo -j ACCEPT
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 3. 允许已建立的和相关连接通过（关键！否则无法收到响应包）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 4. 允许ICMP（ping命令）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;iptables -A INPUT -p icmp -j ACCEPT
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 5. 开放特定服务端口（按需添加）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;iptables -A INPUT -p tcp --dport &lt;span class="m"&gt;22&lt;/span&gt; -j ACCEPT &lt;span class="c1"&gt;# SSH&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;iptables -A INPUT -p tcp --dport &lt;span class="m"&gt;80&lt;/span&gt; -j ACCEPT &lt;span class="c1"&gt;# HTTP&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;iptables -A INPUT -p tcp --dport &lt;span class="m"&gt;443&lt;/span&gt; -j ACCEPT &lt;span class="c1"&gt;# HTTPS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 进入防火墙的数据包目的地址转换，从网口 eth0 进入的数据包，把目的 IP 为 114.115.116.117，端口为 80 的数据包，转到 10.0.0.1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 这里外网用户访问公网地址 114.115.116.117:80，防火墙再转发到内网地址&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;iptables -t nat -A PREROUTING -i eth0 -d 114.115.116.117 -p tcp --dport &lt;span class="m"&gt;80&lt;/span&gt; -j DNAT --to-destination 10.0.0.1
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 源地址转换，源地址 10.0.0.0/24 ，从网口 eth1 发出，并把源地址伪装成 111.112.113.114，响应回来后再转换为源地址&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 这里是内网地址 10.0.0.0/24 主机访问外网，会将内网地址伪装成公网 IP 111.112.113.114&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;iptables -t nat -A POSTROUTING -s 10.0.0.0/24 -i eth1 -j SNAT --to-source 111.112.113.114&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;规则的顺序问题&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;规则的顺序很重要，&lt;strong&gt;先匹配的规则先执行&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;如果没有匹配的规则，那么就会使用默认策略。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 可以接收从 IP 为 10.0.0.1 发送的数据包&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;iptables -t filter -A INPUT -s 10.0.0.1 -j ACCEPT
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;iptables -A INPUT -s 10.0.0.2 -j ACCEPT
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;iptables -A INPUT -s 10.0.0.2 -j DROP&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;INPUT 链配置了两条规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分别是接收 IP 为 &lt;code&gt;10.0.0.2&lt;/code&gt; 的数据包；&lt;/li&gt;
&lt;li&gt;和丢弃 IP 为 &lt;code&gt;10.0.0.2&lt;/code&gt; 的数据包。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那么 &lt;code&gt;10.0.0.2&lt;/code&gt; 的数据包能不能进来？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可以&lt;/strong&gt;。数据包会先匹配前面的 &lt;code&gt;ACCEPT 10.0.0.2&lt;/code&gt; 的规则，这个时候数据包就进入了系统，所以规则顺序很重要。&lt;strong&gt;可以使用 &lt;code&gt;-I&lt;/code&gt; 把规则从头插入&lt;/strong&gt;：&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;iptables -I INPUT -s 10.0.0.2 -j ACCEPT&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;</description></item><item><title>Terraform</title><link>https://shipengqi.github.io/devops-learn/docs/terraform/01_terraform/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/terraform/01_terraform/</guid><description>
&lt;h2&gt;概念&lt;span class="hx:absolute hx:-mt-20" id="概念"&gt;&lt;/span&gt;
&lt;a href="#%e6%a6%82%e5%bf%b5" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Providers (提供商)
&lt;ul&gt;
&lt;li&gt;是什么：Provider 是 Terraform 的插件，用于与特定的云平台（如 AWS, Azure, GCP）、 SaaS 服务（如 Cloudflare, Datadog）或本地基础设施（如 vSphere, Docker）进行交互。&lt;/li&gt;
&lt;li&gt;作用：Provider 负责理解 API 交互并将资源创建、更新和删除的请求翻译成具体的 API 调用。&lt;/li&gt;
&lt;li&gt;如何使用：在配置中通过 provider 块进行声明和配置（例如，设置 region 和 access key）。&lt;/li&gt;
&lt;li&gt;示例：aws, azurerm, google, kubernetes, null。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Resources (资源)
&lt;ul&gt;
&lt;li&gt;是什么：Resource 是 Terraform 配置中最重要的元素，代表一个具体的基础设施资源。&lt;/li&gt;
&lt;li&gt;作用：定义一个需要被创建、管理和销毁的资源实体，例如一台虚拟机、一个网络安全组、一个 S3 存储桶。&lt;/li&gt;
&lt;li&gt;结构：&lt;code&gt;resource &amp;quot;resource_type&amp;quot; &amp;quot;resource_name&amp;quot; { ... }&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;resource_type&lt;/code&gt;：由 Provider 提供（如 &lt;code&gt;aws_instance&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;resource_name&lt;/code&gt;：你在当前 Terraform 模块内给这个资源起的逻辑名称（标识符）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例：&lt;code&gt;resource &amp;quot;aws_instance&amp;quot; &amp;quot;my_web_server&amp;quot; { ami = &amp;quot;ami-12345&amp;quot;, instance_type = &amp;quot;t2.micro&amp;quot; }&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Input Variables (输入变量)
&lt;ul&gt;
&lt;li&gt;是什么：类似于函数的参数，用于&lt;strong&gt;从外部向 Terraform 模块传递值&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;作用：参数化配置，提高代码的灵活性和可复用性。避免将敏感信息或环境特定的值硬编码在配置文件中。&lt;/li&gt;
&lt;li&gt;如何定义：在 &lt;code&gt;variables.tf&lt;/code&gt; 文件中使用 variable 块声明。&lt;/li&gt;
&lt;li&gt;如何赋值：可以通过命令行 &lt;code&gt;-var &amp;quot;var_name=var_value&amp;quot;&lt;/code&gt; 选项、&lt;code&gt;.tfvars&lt;/code&gt; 文件、环境变量等方式传入。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Output Values (输出值)
&lt;ul&gt;
&lt;li&gt;是什么：类似于函数的返回值，用于&lt;strong&gt;将模块内部资源的信息暴露给外部&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;作用：共享资源的属性（例如，新创建服务器的公有 IP 地址），以便其他 Terraform 配置或外部世界可以使用。&lt;/li&gt;
&lt;li&gt;如何定义：在 &lt;code&gt;outputs.tf&lt;/code&gt; 文件中使用 output 块声明。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;State (状态)
&lt;ul&gt;
&lt;li&gt;是什么：一个名为 &lt;code&gt;terraform.tfstate&lt;/code&gt; 的 JSON 文件，它极其重要。它&lt;strong&gt;存储了 Terraform 所管理基础设施的当前状态和属性映射&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;作用：
&lt;ul&gt;
&lt;li&gt;映射现实：将你的配置文件（&lt;code&gt;.tf&lt;/code&gt;）中的资源定义映射到现实世界中的真实资源 ID。&lt;/li&gt;
&lt;li&gt;元数据存储：&lt;strong&gt;存储资源的依赖关系、属性等信息，用于计算增量变更&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;性能：缓存资源信息，避免每次执行都需查询所有云资源。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;重要提示：&lt;strong&gt;必须安全地存储和备份状态文件（例如使用远程后端如 S3 + DynamoDB），严禁手动修改。团队成员间应共享同一份状态文件以避免配置冲突&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Modules (模块)
&lt;ul&gt;
&lt;li&gt;是什么：&lt;strong&gt;将多个资源组合成一个更大、可重用单元的容器&lt;/strong&gt;。一个模块就是一个包含 Terraform 配置文件（&lt;code&gt;main.tf&lt;/code&gt;, &lt;code&gt;variables.tf&lt;/code&gt;, &lt;code&gt;outputs.tf&lt;/code&gt;）的目录。&lt;/li&gt;
&lt;li&gt;作用：&lt;strong&gt;抽象和封装基础设施，实现代码复用和组织化&lt;/strong&gt;。你可以创建自己的模块，&lt;strong&gt;也可以使用来自 Terraform Registry 的公共模块&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;根模块&lt;/strong&gt;：执行 &lt;code&gt;terraform apply&lt;/code&gt; 时所在的目录。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;子模块&lt;/strong&gt;：在配置中通过 &lt;code&gt;module&lt;/code&gt; 块调用的其他模块。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Data Sources (数据源)
&lt;ul&gt;
&lt;li&gt;是什么：数据源允许 Terraform 从外部数据源获取信息，而不是从本地配置文件中获取。比如现在要在一个现有的 aws VPC 中创建一个子网，而不是新的 VPC，如何获取 VPC id。&lt;strong&gt;Resource 用于创建和管理基础设施资源，Data Source 用于检索和利用现有基础设施资源的信息&lt;/strong&gt;。
&lt;ul&gt;
&lt;li&gt;可以从控制台获取 VPC id，比较麻烦。&lt;/li&gt;
&lt;li&gt;可以从数据源中获取 VPC id。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;作用：&lt;strong&gt;检索和利用现有基础设施资源的信息，在配置中引用&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;如何定义：在 &lt;code&gt;data.tf&lt;/code&gt; 文件中使用 &lt;code&gt;data&lt;/code&gt; 块声明。&lt;/li&gt;
&lt;li&gt;示例：&lt;code&gt;data &amp;quot;aws_ami&amp;quot; &amp;quot;example&amp;quot; { most_recent = true, owners = [&amp;quot;self&amp;quot;] }&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Resource 与 Data Source 可以看作为函数，&lt;strong&gt;Resource 的定义是一个创建资源的函数，然后传递参数给 Terraform，来创建对应的实体&lt;/strong&gt;。&lt;strong&gt;Data Source 可以看作是一个查找并返回现有实体信息的函数，可以指定查询的条件和参数&lt;/strong&gt;。&lt;/p&gt;
&lt;h2&gt;基本工作流程&lt;span class="hx:absolute hx:-mt-20" id="基本工作流程"&gt;&lt;/span&gt;
&lt;a href="#%e5%9f%ba%e6%9c%ac%e5%b7%a5%e4%bd%9c%e6%b5%81%e7%a8%8b" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Init 初始化，初始化工作目录。下载配置中声明的 Provider 插件、模块等依赖项。
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;terraform init&lt;/code&gt;，&lt;strong&gt;第一次使用新配置时，或添加/修改了 Provider 或模块后&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Plan 计划，它会对比状态文件（当前状态）和配置文件（期望状态），然后生成一个执行计划，算出来需要执行的步骤。
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;terraform plan&lt;/code&gt; 在真正应用变更之前进行审查和确认，避免意外操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Apply 应用，会根据执行计划，来执行你的操作。
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;terraform apply&lt;/code&gt;，执行计划中的变更，使现实基础设施的状态与你的配置保持一致。&lt;/li&gt;
&lt;li&gt;你可以在 &lt;code&gt;apply&lt;/code&gt; 时添加 &lt;code&gt;-auto-approve&lt;/code&gt; 参数，来自动 approve 这个计划。否则会提示你是否 approve 这个计划。&lt;/li&gt;
&lt;li&gt;你也可以在 &lt;code&gt;apply&lt;/code&gt; 时添加 &lt;code&gt;-target&lt;/code&gt; 参数，来指定只执行某个资源。&lt;/li&gt;
&lt;li&gt;你也可以在 &lt;code&gt;apply&lt;/code&gt; 时添加 &lt;code&gt;-destroy&lt;/code&gt; 参数，来指定只删除某个资源。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Destroy 销毁，会销毁所有资源。也需要确认是否销毁。支持 &lt;code&gt;-auto-approve&lt;/code&gt;。
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;terraform destroy&lt;/code&gt;，清理环境，避免产生不必要的费用。&lt;/li&gt;
&lt;li&gt;删除资源可以直接在配置文件中删除配置，然后执行 &lt;code&gt;terraform apply&lt;/code&gt; 来删除资源（推荐）。&lt;/li&gt;
&lt;li&gt;也可以使用 &lt;code&gt;terraform destroy -target &amp;lt;资源类型&amp;gt;.&amp;lt;资源名称&amp;gt;&lt;/code&gt; 来删除指定资源，不推荐，因为会导致状态与配置文件不一致。&lt;strong&gt;所有的更改都应该通过配置文件来进行&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;语法&lt;span class="hx:absolute hx:-mt-20" id="语法"&gt;&lt;/span&gt;
&lt;a href="#%e8%af%ad%e6%b3%95" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;参数&lt;span class="hx:absolute hx:-mt-20" id="参数"&gt;&lt;/span&gt;
&lt;a href="#%e5%8f%82%e6%95%b0" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;HCL 中的参数就是将一个值赋给一个特定的名称：&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-hcl" data-lang="hcl"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;example&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;等号前的标识符就是参数名，等号后的表达式就是参数值。&lt;/p&gt;
&lt;h3&gt;标识符&lt;span class="hx:absolute hx:-mt-20" id="标识符"&gt;&lt;/span&gt;
&lt;a href="#%e6%a0%87%e8%af%86%e7%ac%a6" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;合法的标识符可以包含字母、数字、下划线(&lt;code&gt;_&lt;/code&gt;)以及连字符(&lt;code&gt;-&lt;/code&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;标识符首字母不可以为数字&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;注释&lt;span class="hx:absolute hx:-mt-20" id="注释"&gt;&lt;/span&gt;
&lt;a href="#%e6%b3%a8%e9%87%8a" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-hcl" data-lang="hcl"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt; # Configuration options 单行注释
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt; &lt;span class="err"&gt;//&lt;/span&gt; &lt;span class="k"&gt;Configuration&lt;/span&gt; &lt;span class="k"&gt;options&lt;/span&gt; &lt;span class="k"&gt;单行注释&lt;/span&gt;&lt;span class="cm"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cm"&gt; /* 多行注释
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cm"&gt; Configuration options
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cm"&gt; Configuration options
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cm"&gt; */&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;核心配置块&lt;span class="hx:absolute hx:-mt-20" id="核心配置块"&gt;&lt;/span&gt;
&lt;a href="#%e6%a0%b8%e5%bf%83%e9%85%8d%e7%bd%ae%e5%9d%97" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;terraform&lt;/code&gt; 配置块：定义 Terraform 版本、插件源等。
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;required_providers&lt;/code&gt;：指定所需的 Provider 插件源及其版本。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;backend&lt;/code&gt;：&lt;strong&gt;配置状态文件的存储后端&lt;/strong&gt;，如本地文件、远程后端（如 S3 + DynamoDB）等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;provider&lt;/code&gt; 配置块
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;定义使用的 Provider 插件&lt;/strong&gt;，如 AWS、Azure、GCP 等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置 Provider 插件的认证信息&lt;/strong&gt;，如 API 密钥、访问令牌等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;resource&lt;/code&gt; 配置块
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;定义要创建的资源&lt;/strong&gt;，如 AWS 实例、GCP 存储桶等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置资源的属性&lt;/strong&gt;，如实例类型、存储桶名称等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;variable&lt;/code&gt; 配置块
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;定义输入变量&lt;/strong&gt;，如输入参数、环境变量等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置变量的默认值&lt;/strong&gt;，如 &lt;code&gt;default = &amp;quot;us-east-1&amp;quot;&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;output&lt;/code&gt; 配置块
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;定义输出值&lt;/strong&gt;，应用完成后公开一些有用的信息（如服务器的 IP 地址）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置输出值的描述&lt;/strong&gt;，如 &lt;code&gt;description = &amp;quot;The ID of the created instance&amp;quot;&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置输出值的敏感信息&lt;/strong&gt;，如 &lt;code&gt;sensitive = true&lt;/code&gt;，可以防止输出值被打印到日志中。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;data&lt;/code&gt; 配置块
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;定义数据源&lt;/strong&gt;，用于从提供商获取外部数据或查询已有资源的信息，以便在配置中使用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置数据源的属性&lt;/strong&gt;，如实例 ID、存储桶名称等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;module&lt;/code&gt; 配置块
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;调用模块&lt;/strong&gt;，将多个资源封装成一个可重用的单元。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置模块的参数&lt;/strong&gt;，对于 module 来说,输入变量就像函数的参数,输出值就像函数的返回值. output 用来导出资源的属性到父级模块&lt;/li&gt;
&lt;li&gt;只有将一组资源组合在一起的 module 才有意义, 例如一组网络资源, 一组数据库资源等.&lt;/li&gt;
&lt;li&gt;可以创建自己的模块,也可以使用其他存在的模块,例如 terraform 官方提供的模块 terraform-aws-modules/vpc&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;locals&lt;/code&gt; 配置块
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;定义本地变量&lt;/strong&gt;，用于在配置中重复使用的值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置本地变量的表达式&lt;/strong&gt;，如 &lt;code&gt;local_var = &amp;quot;value&amp;quot;&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;失败&lt;span class="hx:absolute hx:-mt-20" id="失败"&gt;&lt;/span&gt;
&lt;a href="#%e5%a4%b1%e8%b4%a5" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;apply&lt;/code&gt; 失败会生成 crash.log 文件, 可以根据这个文件来调试.&lt;/p&gt;
&lt;h2&gt;使用已经存在的 module&lt;span class="hx:absolute hx:-mt-20" id="使用已经存在的-module"&gt;&lt;/span&gt;
&lt;a href="#%e4%bd%bf%e7%94%a8%e5%b7%b2%e7%bb%8f%e5%ad%98%e5%9c%a8%e7%9a%84-module" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-hcl" data-lang="hcl"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;vpc&amp;#34;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;terraform-aws-modules/vpc/aws&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;my-vpc&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; cidr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;10.0.0.0/16&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; azs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;eu-west-1a&amp;#34;, &amp;#34;eu-west-1b&amp;#34;, &amp;#34;eu-west-1c&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; private_subnets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;10.0.1.0/24&amp;#34;, &amp;#34;10.0.2.0/24&amp;#34;, &amp;#34;10.0.3.0/24&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; public_subnets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;10.0.101.0/24&amp;#34;, &amp;#34;10.0.102.0/24&amp;#34;, &amp;#34;10.0.103.0/24&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; enable_nat_gateway&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; enable_vpn_gateway&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; Terraform&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;true&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; Environment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;dev&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;配置文件&lt;span class="hx:absolute hx:-mt-20" id="配置文件"&gt;&lt;/span&gt;
&lt;a href="#%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Provider 部分&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;表示 provider 部分，用来指定你要使用的 provider，比如 aws，azure，gcp 等。&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-hcl" data-lang="hcl"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;terraform&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;required_providers&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; aws&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;hashicorp/aws&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;6.10.0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;provider&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;aws&amp;#34;&lt;/span&gt; {&lt;span class="c1"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt; # Configuration options
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;对于多个 provider 的情况，可以单独抽出一个 &lt;code&gt;providers.tf&lt;/code&gt; 文件。&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-hcl" data-lang="hcl"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;terraform&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;required_providers&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; aws&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;hashicorp/aws&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;6.10.0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; azurerm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;hashicorp/azurerm&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;4.41.0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; tencentcloud&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;tencentcloudstack/tencentcloud&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;1.123.0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Resource 部分&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;表示 resource 部分，用来指定你要创建的资源，比如 aws 中的 ec2，rds 等。&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-hcl" data-lang="hcl"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# resource
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# &amp;#34;aws_instance&amp;#34; 表示资源类型
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# &amp;#34;example&amp;#34; 表示资源名称，注意这个名字是你自己定义的，是 local 的，不是 aws 中的资源名称。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;aws_instance&amp;#34; &amp;#34;example&amp;#34;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;example&amp;#34;&lt;/span&gt;&lt;span class="c1"&gt; # aws 中的资源名称
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="n"&gt; ami&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;ami-0c55b159cbfafe1f0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; instance_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;t2.micro&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Variable 文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;例如定义 resource 我们需要填一些参数，比如 ami，instance type 等。这些参数我们可以定义在 variable 文件中。在 variable 文件中定义的变量的值，然后在 resource 中引用，避免在 &lt;code&gt;main.tf&lt;/code&gt; 中改来改去。&lt;/p&gt;
&lt;ol start="4"&gt;
&lt;li&gt;Output 文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在有些情况在，只有当这个资源被创建出来之后，你才知道这个资源的一些信息，比如 id， ip 地址，dns 名称等。&lt;/p&gt;
&lt;p&gt;如果你想使用这些值，作为以下资源的输入参数，就可以使用 output 来导出。&lt;/p&gt;
&lt;h2&gt;示例&lt;span class="hx:absolute hx:-mt-20" id="示例"&gt;&lt;/span&gt;
&lt;a href="#%e7%a4%ba%e4%be%8b" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;简单示例&lt;span class="hx:absolute hx:-mt-20" id="简单示例"&gt;&lt;/span&gt;
&lt;a href="#%e7%ae%80%e5%8d%95%e7%a4%ba%e4%be%8b" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;main.tf&lt;/code&gt;：&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-hcl" data-lang="hcl"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;terraform&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;required_providers&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; azurerm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;hashicorp/azurerm&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;4.41.0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;provider&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;azurerm&amp;#34;&lt;/span&gt; {&lt;span class="c1"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt; # Configuration options
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt; # features 是必须的，可以为空
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt; &lt;span class="k"&gt;features&lt;/span&gt; {}
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;azurerm_resource_group&amp;#34; &amp;#34;example&amp;#34;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;ExampleRG&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;West Europe&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;运行 &lt;code&gt;terraform init&lt;/code&gt; 初始化。会去搜索对应版本的 provider 插件下载，并安装到 &lt;code&gt;.terraform&lt;/code&gt; 目录下。这个目录下会有一个可执行文件，就是 provider。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.terraform.lock.hcl&lt;/code&gt; 是用来记录 provider 插件的版本信息的。包括 hash 值。&lt;/p&gt;
&lt;p&gt;如果已经运行了 az 登录，那么执行 &lt;code&gt;terraform plan&lt;/code&gt;：&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;terraform plan
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 输出&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; + create
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Terraform will perform the following actions:
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="c1"&gt;# azurerm_resource_group.example will be created&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; + resource &lt;span class="s2"&gt;&amp;#34;azurerm_resource_group&amp;#34;&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;example&amp;#34;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; + &lt;span class="nv"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;known after apply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; + &lt;span class="nv"&gt;location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;West Europe&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; + &lt;span class="nv"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;ExampleRG&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Plan: &lt;span class="m"&gt;1&lt;/span&gt; to add, &lt;span class="m"&gt;0&lt;/span&gt; to change, &lt;span class="m"&gt;0&lt;/span&gt; to destroy.&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;执行 &lt;code&gt;terraform apply&lt;/code&gt; 来创建资源。&lt;/p&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Terraform will perform the following actions:
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="c1"&gt;# azurerm_resource_group.example will be created&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; + resource &lt;span class="s2"&gt;&amp;#34;azurerm_resource_group&amp;#34;&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;example&amp;#34;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; + &lt;span class="nv"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;known after apply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; + &lt;span class="nv"&gt;location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;West Europe&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; + &lt;span class="nv"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;ExampleRG&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Plan: &lt;span class="m"&gt;1&lt;/span&gt; to add, &lt;span class="m"&gt;0&lt;/span&gt; to change, &lt;span class="m"&gt;0&lt;/span&gt; to destroy.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Do you want to perform these actions?
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; Terraform will perform the actions described above.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; Only &lt;span class="s1"&gt;&amp;#39;yes&amp;#39;&lt;/span&gt; will be accepted to approve.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; Enter a value: yes
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Apply complete! Resources: &lt;span class="m"&gt;1&lt;/span&gt; added, &lt;span class="m"&gt;0&lt;/span&gt; changed, &lt;span class="m"&gt;0&lt;/span&gt; destroyed.&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;执行完以后会同时创建一个 &lt;code&gt;terraform.tfstate&lt;/code&gt; 文件，用来记录所有被 terraform 管理的资源的状态。&lt;/p&gt;
&lt;p&gt;terraform 会使用这个状态文件去和 &lt;code&gt;main.tf&lt;/code&gt; 中定义的资源进行对比，来判断是否需要创建、更新、删除资源。来达到预期的状态。&lt;/p&gt;
&lt;h3&gt;Variable 示例&lt;span class="hx:absolute hx:-mt-20" id="variable-示例"&gt;&lt;/span&gt;
&lt;a href="#variable-%e7%a4%ba%e4%be%8b" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;variables.tf&lt;/code&gt;：&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-hcl" data-lang="hcl"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;location&amp;#34;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; default&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;West Europe&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; description&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;The location of the resource group.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;storage_account_name&amp;#34;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; description&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;The name of the storage account.&amp;#34;&lt;/span&gt;&lt;span class="c1"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt; # 没有默认值，因为每个 storage account 名称在 azure 中是全局唯一的。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;main.tf&lt;/code&gt;：&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-hcl" data-lang="hcl"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# locals 也是一个变量，本地变量
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 本地变量可存储重复出现的值或表达式，例如多次引用的配置信息。通过 locals 块声明后，可避免在多个地方重复编写相同内容
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# locals 的作用域是模块级别的
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# - 目录作用域：在同一个 Terraform 模块目录（包含所有 .tf 文件的那个目录）中，任何地方定义的 locals 块在整个模块中都可用
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# - 全局可见：一旦在某个 locals 块中定义了一个值（例如 local.name_prefix），你可以在同一个模块的任何 .tf 文件中通过 local.name_prefix 引用它
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# - 不可跨模块：locals 对于父模块或子模块是不可见的。如果需要在模块间共享值，应该使用 output。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 引用 locals 变量时，直接使用 local.&amp;lt;变量名&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="k"&gt;locals&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; usage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;test&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; owner&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;sid&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;azurerm_resource_group&amp;#34; &amp;#34;resourcegroup&amp;#34;&lt;/span&gt; {&lt;span class="c1"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt; # name = &amp;#34;${var.prefix}-RG&amp;#34; 这是另一种变量的用法，可以将 var.prefix 和 -RG 组成一个字符串
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="n"&gt; name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;ExampleRG&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;location&lt;/span&gt;&lt;span class="c1"&gt; # 引用变量，使用 var.&amp;lt;变量名&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;azurerm_storage_account&amp;#34; &amp;#34;storageaccount&amp;#34;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;storage_account_name&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; resource_group_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;azurerm_resource_group&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;resourcegroup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;name&lt;/span&gt;&lt;span class="c1"&gt; # 引用资源，使用 &amp;lt;资源类型&amp;gt;.&amp;lt;资源名称&amp;gt;.&amp;lt;key&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="n"&gt; location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;azurerm_resource_group&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;resourcegroup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;location&lt;/span&gt;&lt;span class="c1"&gt; # 这种方式表示在 resourcegroup 创建完了以后使用 resourcegroup 的 name/location
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; account_tier&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;Standard&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; account_replication_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;LRS&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;local&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;tags&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;storage_account_name&lt;/code&gt; 没有默认值，所以肯定需要指定一个值。有两种方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在 &lt;code&gt;terraform apply&lt;/code&gt; 时，会提示输入 &lt;code&gt;storage_account_name&lt;/code&gt; 的值。&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;terraform plan/apply&lt;/code&gt; 时，需要添加 &lt;code&gt;-var &amp;quot;storage_account_name=mystorageaccount&amp;quot;&lt;/code&gt; 来指定这个值。不方便。&lt;/li&gt;
&lt;li&gt;创建 &lt;strong&gt;&lt;code&gt;terraform.tfvars&lt;/code&gt; 文件&lt;/strong&gt;，在文件中指定变量的值。最推荐的方式。&lt;/li&gt;
&lt;li&gt;环境变量&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;terraform.tfvars&lt;/code&gt; 文件：&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-hcl" data-lang="hcl"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;storage_account_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;mystorageaccount&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h4&gt;环境变量&lt;span class="hx:absolute hx:-mt-20" id="环境变量"&gt;&lt;/span&gt;
&lt;a href="#%e7%8e%af%e5%a2%83%e5%8f%98%e9%87%8f" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;可以通过设置名为 &lt;strong&gt;&lt;code&gt;TF_VAR_&amp;lt;NAME&amp;gt; &lt;/code&gt;的环境变量为输入变量赋值&lt;/strong&gt;，例如：&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;$ &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;TF_VAR_image_id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ami-abc123
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;$ terraform plan&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Terraform 要求环境变量中的 &lt;code&gt;&amp;lt;NAME&amp;gt;&lt;/code&gt; 与 Terraform 代码中定义的输入变量名大小写完全一致。&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-hcl" data-lang="hcl"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;image_id&amp;#34;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;环境变量传值非常适合在自动化流水线中使用，尤其适合用来传递敏感数据，类似密码、访问密钥等。&lt;/p&gt;
&lt;h4&gt;多个环境&lt;span class="hx:absolute hx:-mt-20" id="多个环境"&gt;&lt;/span&gt;
&lt;a href="#%e5%a4%9a%e4%b8%aa%e7%8e%af%e5%a2%83" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;对于多个环境，每个环境的变量值可能会不同。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开发环境&lt;/li&gt;
&lt;li&gt;测试环境&lt;/li&gt;
&lt;li&gt;生产环境&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每个环境的变量值可能会不同，每个环境都创建一个 &lt;code&gt;terraform.tfvars&lt;/code&gt; 文件。例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开发环境：&lt;code&gt;terraform-dev.tfvars&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;测试环境：&lt;code&gt;terraform-test.tfvars&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;生产环境：&lt;code&gt;terraform-prod.tfvars&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;apply&lt;/code&gt; 时，需要添加 &lt;code&gt;-var-file&lt;/code&gt; 来指定 &lt;code&gt;terraform.tfvars&lt;/code&gt; 文件的路径。例如：&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;terraform apply -var-file&lt;span class="o"&gt;=&lt;/span&gt;terraform.dev.tfvars&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h4&gt;Variable 类型&lt;span class="hx:absolute hx:-mt-20" id="variable-类型"&gt;&lt;/span&gt;
&lt;a href="#variable-%e7%b1%bb%e5%9e%8b" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;string&lt;/li&gt;
&lt;li&gt;number&lt;/li&gt;
&lt;li&gt;bool&lt;/li&gt;
&lt;li&gt;&lt;code&gt;list(&amp;lt;TYPE&amp;gt;)&lt;/code&gt;：列表，例如 &lt;code&gt;list(string)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set(&amp;lt;TYPE&amp;gt;)&lt;/code&gt;：集合，例如 &lt;code&gt;set(string)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;map(&amp;lt;TYPE&amp;gt;)&lt;/code&gt;：映射对象，例如 &lt;code&gt;map(string)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;object({&amp;lt;ATTR NAME&amp;gt; = &amp;lt;TYPE&amp;gt;, ... })&lt;/code&gt;：对象，例如 &lt;code&gt;object({ name = string, age = number })&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tuple([&amp;lt;TYPE&amp;gt;, ...])&lt;/code&gt;：元组，例如 &lt;code&gt;tuple([string, number, bool])&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-hcl" data-lang="hcl"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;image_id&amp;#34;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;availability_zone_names&amp;#34;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; default&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;us-west-1a&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;docker_ports&amp;#34;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; internal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;number&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; external&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;number&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; protocol&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; }&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; default&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; internal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;8300&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; external&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;8300&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; protocol&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;tcp&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Module 示例&lt;span class="hx:absolute hx:-mt-20" id="module-示例"&gt;&lt;/span&gt;
&lt;a href="#module-%e7%a4%ba%e4%be%8b" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;模块用来存储可复用的代码，如果在每一个 terraform 项目中都写一遍相同的代码，会导致代码重复。这个时候就可以使用模块，&lt;/p&gt;
&lt;p&gt;Module 是有层级的，例如：&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;terraformpro
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;├── main.tf
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;├── variables.tf
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;├── outputs.tf
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;├── terraform.tfvars
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;├── modules
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ ├── module1
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ ├── main.tf
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ ├── variables.tf
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ ├── outputs.tf
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ ├── terraform.tfvars
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ ├── module2
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ ├── module3&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;main.tf&lt;/code&gt;：&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-hcl" data-lang="hcl"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# call module1 which has 2 variables
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;module1&amp;#34;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;./modules/module1&amp;#34;&lt;/span&gt;&lt;span class="c1"&gt; # 指定模块的路径
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="n"&gt; basename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;examplemodule1&amp;#34;&lt;/span&gt;&lt;span class="c1"&gt; # 设置模块变量的值
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="n"&gt; location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;West Europe&amp;#34;&lt;/span&gt;&lt;span class="c1"&gt; # 设置模块变量的值
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;}&lt;span class="c1"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# call module2 which has 3 variables
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;module2&amp;#34;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;./modules/module2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; basename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;examplemodule2&amp;#34;&lt;/span&gt;&lt;span class="c1"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt; # resource_group_name 是 module1 创建完以后返回的，虽然我们可以知道 module1 创建的 resource group 名称是 ExampleRG
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt; # 但是在 module2 中并不想写死
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt; # module1 的 output 文件输出了 resource_group_name
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="n"&gt; resource_group_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;module1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;resource_group_name&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;West Europe&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;module1/outputs.tf&lt;/code&gt;：&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-hcl" data-lang="hcl"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 模块输出 resource_group_name
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="k"&gt;output&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;resource_group_name&amp;#34;&lt;/span&gt; {&lt;span class="c1"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt; # &amp;lt;资源类型&amp;gt;.&amp;lt;资源名称&amp;gt;.&amp;lt;key&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="n"&gt; value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;azurerm_resource_group&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;resourcegroup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;name&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;一个 output 属性只能定义一个 value&lt;/strong&gt;。&lt;/p&gt;
&lt;h3&gt;For 循环示例&lt;span class="hx:absolute hx:-mt-20" id="for-循环示例"&gt;&lt;/span&gt;
&lt;a href="#for-%e5%be%aa%e7%8e%af%e7%a4%ba%e4%be%8b" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-hcl" data-lang="hcl"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;azurerm_resource_group&amp;#34; &amp;#34;resourcegroup&amp;#34;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;resource_group_name&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;location&lt;/span&gt;&lt;span class="c1"&gt; # 引用变量，使用 var.&amp;lt;变量名&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;azurerm_virtual_network&amp;#34; &amp;#34;vnet&amp;#34;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;ExampleVNet&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; address_space&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;10.0.0.0/16&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;azurerm_resource_group&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;resourcegroup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;location&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; resource_group_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;azurerm_resource_group&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;resourcegroup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;name&lt;/span&gt;&lt;span class="c1"&gt; # 不使用 var.resource_group_name，因为创建顺序是无序的，
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt; # 直接使用，可能会报错，因为 vnet 依赖 resource group，而 resource group 没有创建完成，var.resource_group_name 这个 resource group 还不存在
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;azurerm_subnet&amp;#34; &amp;#34;subnet&amp;#34;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; for_each&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;subnets&lt;/span&gt;&lt;span class="c1"&gt; # for each 变量 subnets，遍历里面每一个 instance
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="n"&gt; resource_group_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;azurerm_resource_group&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;resourcegroup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;name&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; virtual_network_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;azurerm_virtual_network&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;vnet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;name&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;each&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;value&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="c1"&gt; # 提取变量 subnets 中的一个元素的 name 的值
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="n"&gt; address_prefixes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;each&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;value&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;address_prefixes&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="c1"&gt; # 提取变量 subnets 中的一个元素的 address_prefixes 的值
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;variables.tf&lt;/code&gt;：&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-hcl" data-lang="hcl"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;subnets&amp;#34;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; default&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; subnet_1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;Subnet1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; address_prefixes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;10.0.0.0/24&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="c1"&gt; # []代表列表，一个或多个值
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; subnet_2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;Subnet2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; address_prefixes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;10.0.1.0/24&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; subnet_3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;Subnet3&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; address_prefixes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;10.0.2.0/24&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; bastion_subnet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;AzureBastionSubnet&amp;#34;&lt;/span&gt;&lt;span class="c1"&gt; # bastion 的 subnet 必须是这个名字
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="n"&gt; address_prefixes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;10.0.250.0/24&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Data Sources 示例&lt;span class="hx:absolute hx:-mt-20" id="data-sources-示例"&gt;&lt;/span&gt;
&lt;a href="#data-sources-%e7%a4%ba%e4%be%8b" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Provider 的文档中，不仅有 Resource，还有 Data Source。例如 EC2 目录下有 Resources，还有 Data Sources。&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-hcl" data-lang="hcl"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;aws_vpc&amp;#34; &amp;#34;exist_vpc&amp;#34;&lt;/span&gt; {&lt;span class="c1"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt; # 这里可以定义的过滤条件，告诉 aws，按照什么条件去查找，输出一个符合条件的 VPC
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt; # filter {}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="n"&gt; default&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;true&lt;/span&gt;&lt;span class="c1"&gt; # 表示如果没有找到符合条件的 VPC，就使用默认的 VPC
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-hcl" data-lang="hcl"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;aws_subnet&amp;#34; &amp;#34;dev_subnet&amp;#34;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; vpc_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;aws_vpc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;exist_vpc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;id&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; cidr_block&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;10.0.1.0/24&amp;#34;&lt;/span&gt;&lt;span class="c1"&gt; # 不能和默认的 VPC 下的子网的 CIDR 冲突
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="n"&gt; availability_zone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;us-east-1a&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;身份认证&lt;span class="hx:absolute hx:-mt-20" id="身份认证"&gt;&lt;/span&gt;
&lt;a href="#%e8%ba%ab%e4%bb%bd%e8%ae%a4%e8%af%81" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;如何证明你有权限在对应的云平台上操作。&lt;strong&gt;Terraform 本身不处理认证，而是委托给下载的 Provider 插件&lt;/strong&gt;，并由插件遵循对应云平台的认证标准。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;云平台&lt;/th&gt;
&lt;th&gt;认证方式 (推荐顺序)&lt;/th&gt;
&lt;th&gt;Terraform Provider 如何获取凭证&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;AWS&lt;/td&gt;
&lt;td&gt;1. IAM 角色 (用于 EC2/ECS 等) &lt;br /&gt;2. 共享凭证文件 (~/.aws/credentials) &lt;br /&gt;3. 环境变量 &lt;br /&gt;4. 硬编码 (极不推荐)&lt;/td&gt;
&lt;td&gt;Provider 会使用 AWS SDK，自动按照标准 AWS CLI 的认证流程查找凭证。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Azure&lt;/td&gt;
&lt;td&gt;1. 环境变量 (ARM_CLIENT_ID, ARM_CLIENT_SECRET, ARM_TENANT_ID, ARM_SUBSCRIPTION_ID) &lt;br /&gt;2. CLI 认证 (az login)&lt;/td&gt;
&lt;td&gt;Provider 使用 Azure SDK，支持环境变量或自动继承已登录的 Azure CLI 的认证上下文。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Google Cloud&lt;/td&gt;
&lt;td&gt;1. 应用默认凭证 (ADC) - gcloud auth application-default login &lt;br /&gt;2. 服务账户密钥文件 &lt;br /&gt;3. 环境变量&lt;/td&gt;
&lt;td&gt;Provider 使用 Google Cloud SDK，自动查找应用默认凭证或环境变量指定的密钥文件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Kubernetes&lt;/td&gt;
&lt;td&gt;1. 环境变量 (KUBERNETES_SERVICE_HOST, KUBERNETES_SERVICE_PORT) &lt;br /&gt;2. 配置文件 (~/.kube/config)&lt;/td&gt;
&lt;td&gt;Provider 使用 Kubernetes 客户端库，自动查找环境变量或配置文件指定的集群信息。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;AWS&lt;span class="hx:absolute hx:-mt-20" id="aws"&gt;&lt;/span&gt;
&lt;a href="#aws" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;静态凭证&lt;/strong&gt; (Static Credentials) - 不推荐用于生产&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;硬编码 (极不推荐，最不安全)&lt;/strong&gt;，会被提交到 Git 仓库：&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-hcl" data-lang="hcl"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;provider&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;aws&amp;#34;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; region&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;us-west-2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; access_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;my-access-key&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; secret_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;my-secret-key&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;环境变量&lt;/strong&gt;：&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;AWS_ACCESS_KEY_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;anaccesskey&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;AWS_SECRET_ACCESS_KEY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;asecretkey&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;AWS_REGION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;us-west-2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;terraform plan&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-hcl" data-lang="hcl"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;provider&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;aws&amp;#34;&lt;/span&gt; {}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;共享凭证文件&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;export&lt;/code&gt; 环境变量的方式只在当前 Terminal 生效，关闭 Terminal 后就失效了。想要全局生效，使用凭证文件 &lt;code&gt;~/.aws/credentials&lt;/code&gt;。&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-hcl" data-lang="hcl"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;provider&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;aws&amp;#34;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; region&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;us-west-2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;凭证文件：&lt;/p&gt;
&lt;p&gt;当你运行 &lt;code&gt;aws configure&lt;/code&gt; 后，凭证会保存在 &lt;code&gt;~/.aws/credentials&lt;/code&gt; 中。Terraform 会自动读取这个文件。&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-ini" data-lang="ini"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ~/.aws/credentials&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;[default]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="na"&gt;aws_access_key_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;AKIAIOSFODNN7EXAMPLE&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="na"&gt;aws_secret_access_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;对应的 &lt;code&gt;~/.aws/config&lt;/code&gt; 文件定义区域：&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-ini" data-lang="ini"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# ~/.aws/config&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;[default]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="na"&gt;region&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;us-east-1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;避免使用静态凭证，尤其是硬编码&lt;/strong&gt;。如果必须使用，请仅用于个人测试账户，并确保 terraform 文件绝不包含凭证并提交到 Git。&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;&lt;strong&gt;IAM 角色和临时安全凭证&lt;/strong&gt; (IAM Roles &amp;amp; Temporary Security Credentials)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这是 AWS 和 Terraform 推荐的&lt;strong&gt;最佳实践&lt;/strong&gt;，因为它提供了更高的安全性。凭证是临时的（默认最多 1 小时），过期后自动失效，无需轮换。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;通过环境变量提供临时凭证&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;临时凭证除了 Access Key 和 Secret Key，还有一个 Session Token。&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;AWS_ACCESS_KEY_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;ASIAIOSFODNN7EXAMPLE&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;AWS_SECRET_ACCESS_KEY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;AWS_SESSION_TOKEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;your-very-long-session-token&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;terraform plan&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;在共享凭证文件中配置临时凭证&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;~/.aws/credentials&lt;/code&gt; 中，可以为一个 Profile 配置临时凭证：&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-ini" data-lang="ini"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;[default]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="na"&gt;aws_access_key_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;ASIAIOSFODNN7EXAMPLE&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="na"&gt;aws_secret_access_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="na"&gt;aws_session_token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;your-very-long-session-token&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;ol start="3"&gt;
&lt;li&gt;IAM 实例配置文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当 Terraform 运行在 &lt;strong&gt;AWS 资源内部&lt;/strong&gt;时（例如在 EC2 实例上），这是最安全、最推荐的方式。&lt;/p&gt;
&lt;p&gt;原理：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;你创建一个 IAM 角色（Role）并授予它必要的权限。&lt;/li&gt;
&lt;li&gt;你将这个角色附加（Attach）到 EC2 实例上（通过实例配置文件 Instance Profile）。&lt;/li&gt;
&lt;li&gt;EC2 实例上的应用程序（包括 Terraform）可以通过内网的实例元数据服务 (IMDS) 自动获取该角色的临时安全凭证。&lt;/li&gt;
&lt;li&gt;Terraform AWS Provider 会自动发现并使用这些凭证，你无需做任何配置。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;状态&lt;span class="hx:absolute hx:-mt-20" id="状态"&gt;&lt;/span&gt;
&lt;a href="#%e7%8a%b6%e6%80%81" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;terraform 会将资源的状态保存在状态文件中。默认是 &lt;code&gt;terraform.tfstate&lt;/code&gt;。这是一个 JSON 文件。&lt;/p&gt;
&lt;p&gt;每当更新资源后，terraform 会更新状态文件。&lt;/p&gt;
&lt;p&gt;如果删除了所有资源，那么 &lt;code&gt;resources&lt;/code&gt; 会是一个空数组。&lt;/p&gt;
&lt;h3&gt;terraform.tfstate.backup&lt;span class="hx:absolute hx:-mt-20" id="terraformtfstatebackup"&gt;&lt;/span&gt;
&lt;a href="#terraformtfstatebackup" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;terraform.tfstate.backup&lt;/code&gt; 是一个备份文件，是 &lt;strong&gt;Terraform 在覆盖当前状态文件 (terraform.tfstate) 之前自动创建的备份副本&lt;/strong&gt;。它的核心作用是充当“后悔药”，让你在操作失败或出现意外时，能够恢复到操作前的已知状态。&lt;/p&gt;
&lt;p&gt;terraform.tfstate.backup 会在你执行任何会修改状态文件的 Terraform 命令时生成。具体来说，当以下两个条件同时满足时：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;执行了会修改状态文件的操作：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;terraform apply&lt;/code&gt;（创建、更新或销毁资源）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;terraform destroy&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;terraform refresh&lt;/code&gt; （替代品 &lt;code&gt;apply -refresh-only&lt;/code&gt; 也会）&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;-target&lt;/code&gt; 参数的上述命令&lt;/li&gt;
&lt;li&gt;&lt;code&gt;terraform import&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;使用本地后端&lt;/strong&gt; (local backend)：即你的状态文件 (terraform.tfstate) 存储在本地磁盘上。如果你使用了远程后端（如 S3、Azure Storage），Terraform 通常不会在本地生成 .backup 文件，因为备份和版本控制由后端自己处理（例如 S3 的对象版本控制）。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;它有什么用？&lt;span class="hx:absolute hx:-mt-20" id="它有什么用"&gt;&lt;/span&gt;
&lt;a href="#%e5%ae%83%e6%9c%89%e4%bb%80%e4%b9%88%e7%94%a8" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;这是一个&lt;strong&gt;灾难恢复&lt;/strong&gt;机制。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;操作失败或中断：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;apply&lt;/code&gt; 操作在执行中途失败（如网络中断、权限突然失效、配额不足）。&lt;/li&gt;
&lt;li&gt;此时，部分资源可能已经被创建或修改，而另一部分没有。&lt;/li&gt;
&lt;li&gt;结果：状态文件 (&lt;code&gt;terraform.tfstate&lt;/code&gt;) 可能处于一个不完整、不一致或损坏的状态，因为它只记录了一部分变更。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;意外后果：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;apply&lt;/code&gt; 操作成功完成了，但引入了一个你未曾预料到的严重问题（例如，错误地覆盖了一个关键配置）。&lt;/li&gt;
&lt;li&gt;结果：状态文件是最新的，但基础设施的状态是错误的。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在这些情况下，可以检查 .backup 文件，了解操作开始前基础设施的状态。从而进行问题诊断。&lt;/p&gt;
&lt;h4&gt;限制&lt;span class="hx:absolute hx:-mt-20" id="限制"&gt;&lt;/span&gt;
&lt;a href="#%e9%99%90%e5%88%b6" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;它只备份前一个状态&lt;/strong&gt;，对于完整的历史跟踪，要使用：
&lt;ul&gt;
&lt;li&gt;版本控制工具（如 Git），手动将 terraform.tfstate 和 .backup 文件提交到 Git，但这非常不推荐，因为状态文件包含敏感信息。&lt;/li&gt;
&lt;li&gt;远程后端（如 S3、Azure Storage），&lt;strong&gt;最佳实践&lt;/strong&gt;。每次状态更新都会在云端保存一个历史版本，你可以随时回滚到任何历史版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;远程后端的行为不同：对于&lt;strong&gt;远程后端，本地不会生成 &lt;code&gt;.backup&lt;/code&gt;&lt;/strong&gt;，但后端本身提供了更强大的版本历史、状态锁定和恢复功能。应该优先使用远程后端。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;terraform.tfstate 什么时候更新&lt;span class="hx:absolute hx:-mt-20" id="terraformtfstate-什么时候更新"&gt;&lt;/span&gt;
&lt;a href="#terraformtfstate-%e4%bb%80%e4%b9%88%e6%97%b6%e5%80%99%e6%9b%b4%e6%96%b0" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;成功执行 &lt;code&gt;terraform apply&lt;/code&gt; 或 &lt;code&gt;terraform destroy&lt;/code&gt; 命令后更新。&lt;/p&gt;
&lt;h3&gt;远程后端&lt;span class="hx:absolute hx:-mt-20" id="远程后端"&gt;&lt;/span&gt;
&lt;a href="#%e8%bf%9c%e7%a8%8b%e5%90%8e%e7%ab%af" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;当团队多个人在使用时，每个人都会在本地执行 Terraform 命令, 或者正在将 Terraform 集成到 Jenkins 中。存在多个创建状态的地方.&lt;/p&gt;
&lt;p&gt;如何共享状态?&lt;/p&gt;
&lt;p&gt;远程后端存储.&lt;/p&gt;
&lt;p&gt;Terraform 引入了远程状态存储机制，也就是 Backend。Backend 是一种抽象的远程存储接口，如同 Provider 一样，Backend 也支持多种不同的远程存储服务：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;local&lt;/li&gt;
&lt;li&gt;remote&lt;/li&gt;
&lt;li&gt;azurerm&lt;/li&gt;
&lt;li&gt;consul&lt;/li&gt;
&lt;li&gt;cos&lt;/li&gt;
&lt;li&gt;gcs&lt;/li&gt;
&lt;li&gt;http&lt;/li&gt;
&lt;li&gt;kubernetes&lt;/li&gt;
&lt;li&gt;oss&lt;/li&gt;
&lt;li&gt;pg&lt;/li&gt;
&lt;li&gt;s3&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;状态锁是指，当针对一个 tfstate 进行变更操作时，可以针对该状态文件添加一把全局锁，确保同一时间只能有一个变更被执行。&lt;/p&gt;
&lt;p&gt;不同的 Backend 对状态锁的支持不尽相同，实现状态锁的机制也不尽相同，例如 consul Backend就通过一个 &lt;code&gt;.lock&lt;/code&gt; 节点来充当锁。&lt;code&gt;s3&lt;/code&gt; Backend 则需要用户传入一个 Dynamodb 表来存放锁信息，而 tfstate 文件被存储在 S3 存储桶里。&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-hcl" data-lang="hcl"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;terraform&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; required_version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;1.13.0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;backend&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;s3&amp;#34;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; bucket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;myapp-terraform-state-bucket&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;myapp/terraform.tfstate&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; region&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;eu-west-1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;required_providers&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; aws&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;hashicorp/aws&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;~&amp;gt; 4.0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;需要先去 aws 创建一个 s3 的 bucket. 名字是 &lt;code&gt;my-terraform-state-bucket&lt;/code&gt; 然后在 bucket 中创建一个文件夹. 文件夹的名称就是 &lt;code&gt;myapp/terraform.tfstate&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;bucket settings for Block Public Access:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Block all public access&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bucket Versioning: bucket 版本控制,每次文件更改都会生成一个版本,可以回滚.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Enable&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Default encryption: 开启默认加密, 可以防止数据泄露.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Disable&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Create. 之后就创建了一个空桶&lt;/p&gt;
&lt;h3&gt;state 命令&lt;span class="hx:absolute hx:-mt-20" id="state-命令"&gt;&lt;/span&gt;
&lt;a href="#state-%e5%91%bd%e4%bb%a4" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;terraform state&lt;/code&gt; 命令用于查看和管理 Terraform 状态文件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;terraform state list&lt;/code&gt;：列出状态文件中的所有资源。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;terraform state show &amp;lt;resource&amp;gt;&lt;/code&gt;：显示指定资源的详细信息。这在调试、查找特定信息（如 IP 地址、ARN）时极其有用。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;terraform state rm &amp;lt;resource&amp;gt;&lt;/code&gt;：从状态文件中删除指定资源。但不会销毁实际的云资源。
&lt;ul&gt;
&lt;li&gt;如果有人绕过 Terraform 在控制台上删除了资源，状态文件中就会留下一个“幽灵”记录。&lt;code&gt;terraform plan&lt;/code&gt; 会报错说资源找不到。这时可以用 &lt;code&gt;state rm&lt;/code&gt; 来清理这个无效记录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;terraform state rm aws_instance.web&lt;/code&gt; Terraform 会“忘记”它曾管理过这个 EC2 实例，但该实例仍在 AWS 中运行。下次 &lt;code&gt;apply&lt;/code&gt; 时，Terraform 会试图创建一个新的 &lt;code&gt;aws_instance.web&lt;/code&gt;（如果配置还在），导致资源冲突。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;terraform state pull&lt;/code&gt;：从远程后端拉取最新状态。&lt;code&gt;terraform state pull &amp;gt; state.json&lt;/code&gt; 主要用于编程式处理状态文件内容，或者用于调试复杂问题。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;terraform state push&lt;/code&gt;：将本地状态推送到远程后端。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;terraform state mv &amp;lt;source&amp;gt; &amp;lt;destination&amp;gt;&lt;/code&gt;：移动资源在状态文件中的位置。不会影响真实的基础设施。云上的资源完好无损，只是 Terraform 管理它的“名字”变了。你必须提前在代码中配置好目标资源块。这个命令&lt;strong&gt;只修改状态，不修改代码&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;运维工作流&lt;span class="hx:absolute hx:-mt-20" id="运维工作流"&gt;&lt;/span&gt;
&lt;a href="#%e8%bf%90%e7%bb%b4%e5%b7%a5%e4%bd%9c%e6%b5%81" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h4&gt;修复一个被手动修改的资源&lt;span class="hx:absolute hx:-mt-20" id="修复一个被手动修改的资源"&gt;&lt;/span&gt;
&lt;a href="#%e4%bf%ae%e5%a4%8d%e4%b8%80%e4%b8%aa%e8%a2%ab%e6%89%8b%e5%8a%a8%e4%bf%ae%e6%94%b9%e7%9a%84%e8%b5%84%e6%ba%90" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;发现问题&lt;/strong&gt;：&lt;code&gt;terraform plan&lt;/code&gt; 报告说有漂移（drift），比如安全组的规则被人在 AWS 控制台上改了。&lt;/li&gt;
&lt;li&gt;先使用 &lt;code&gt;terraform state show &amp;lt;resource&amp;gt;&lt;/code&gt; &lt;strong&gt;查看资源的当前状态&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;查看真实状态&lt;/strong&gt;：去 AWS 控制台确认安全组的真实规则。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;修复 drift&lt;/strong&gt;：根据 AWS 控制台的真实规则，修改 Terraform 配置文件。&lt;/li&gt;
&lt;li&gt;执行 &lt;code&gt;terraform apply&lt;/code&gt; 应用变更。&lt;/li&gt;
&lt;li&gt;确认资源已被正确创建或更新。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;重命名资源&lt;span class="hx:absolute hx:-mt-20" id="重命名资源"&gt;&lt;/span&gt;
&lt;a href="#%e9%87%8d%e5%91%bd%e5%90%8d%e8%b5%84%e6%ba%90" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;假设我们有一个简单的 EC2 实例资源：&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-hcl" data-lang="hcl"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# main.tf (原始代码)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;&lt;/span&gt;&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;aws_instance&amp;#34; &amp;#34;old_name&amp;#34;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; ami&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;ami-123456&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt; instance_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;t3.micro&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;想把资源标识符从 old_name 改为 new_name。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先，修改代码。将 &lt;code&gt;main.tf&lt;/code&gt; 中的资源块改名。&lt;code&gt;resource &amp;quot;aws_instance&amp;quot; &amp;quot;new_name&amp;quot;&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;执行 &lt;code&gt;state mv&lt;/code&gt; 命令。告诉 Terraform 状态文件中原来的那个资源现在由新的名字来管理。&lt;/li&gt;
&lt;li&gt;最后，验证。运行 terraform plan。输出应该显示 No changes. 这意味着基础设施不需要任何变更，只是状态文件的内部记录更新了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果直接改代码而不运行 &lt;code&gt;state mv&lt;/code&gt;，Terraform 会计划销毁 &lt;code&gt;aws_instance.old_name&lt;/code&gt; 并创建 &lt;code&gt;aws_instance.new_name&lt;/code&gt;。&lt;/p&gt;
&lt;h2&gt;其他常用命令&lt;span class="hx:absolute hx:-mt-20" id="其他常用命令"&gt;&lt;/span&gt;
&lt;a href="#%e5%85%b6%e4%bb%96%e5%b8%b8%e7%94%a8%e5%91%bd%e4%bb%a4" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;workspace&lt;span class="hx:absolute hx:-mt-20" id="workspace"&gt;&lt;/span&gt;
&lt;a href="#workspace" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Workspaces 隔离的是 State，而不是代码或变量&lt;/strong&gt;。&lt;strong&gt;快速、轻量地创建配置相同但状态隔离的环境&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;它非常适用于短期存在的环境，如&lt;strong&gt;功能分支开发环境、临时测试环境，或者需要快速复制一套完整基础设施的场景&lt;/strong&gt;。&lt;/p&gt;
&lt;h3&gt;使用场景&lt;span class="hx:absolute hx:-mt-20" id="使用场景"&gt;&lt;/span&gt;
&lt;a href="#%e4%bd%bf%e7%94%a8%e5%9c%ba%e6%99%af" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;你有一套定义好的基础设施代码（例如：1个VPC、2个EC2实例、1个RDS数据库）。现在你需要为功能开发、测试和预发布各部署一套完全一样但完全隔离的环境。&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 创建新工作区&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;terraform workspace new feature-login
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;terraform workspace new staging
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;terraform workspace new preprod
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 切换工作区并部署&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;terraform workspace &lt;span class="k"&gt;select&lt;/span&gt; feature-login
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;terraform apply -var-file&lt;span class="o"&gt;=&lt;/span&gt;feature.tfvars
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;terraform workspace &lt;span class="k"&gt;select&lt;/span&gt; staging
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;terraform apply -var-file&lt;span class="o"&gt;=&lt;/span&gt;staging.tfvars
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;terraform workspace &lt;span class="k"&gt;select&lt;/span&gt; preprod
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;terraform apply -var-file&lt;span class="o"&gt;=&lt;/span&gt;preprod.tfvars&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;如何在工作区之间实现差异配置？&lt;span class="hx:absolute hx:-mt-20" id="如何在工作区之间实现差异配置"&gt;&lt;/span&gt;
&lt;a href="#%e5%a6%82%e4%bd%95%e5%9c%a8%e5%b7%a5%e4%bd%9c%e5%8c%ba%e4%b9%8b%e9%97%b4%e5%ae%9e%e7%8e%b0%e5%b7%ae%e5%bc%82%e9%85%8d%e7%bd%ae" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;使用输入变量和条件表达式&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;使用不同的变量文件&lt;/strong&gt;（&lt;code&gt;.tfvars&lt;/code&gt;）（推荐）：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;terraform workspace &lt;span class="k"&gt;select&lt;/span&gt; dev
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;terraform apply -var-file&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;dev.tfvars&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;terraform workspace &lt;span class="k"&gt;select&lt;/span&gt; prod
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;terraform apply -var-file&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;prod.tfvars&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;限性和风险&lt;span class="hx:absolute hx:-mt-20" id="限性和风险"&gt;&lt;/span&gt;
&lt;a href="#%e9%99%90%e6%80%a7%e5%92%8c%e9%a3%8e%e9%99%a9" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;容易人为失误：很容易忘记切换工作区。你可能以为自己身在 dev，但实际上在 prod，一个 terraform destroy 就会导致灾难性后果。必须时刻使用 terraform workspace show 确认当前工作区。&lt;/p&gt;
&lt;p&gt;代码复杂性：在代码中嵌入大量 terraform.workspace 的逻辑会使配置变得复杂和难以理解，降低了代码的可读性和可维护性。&lt;/p&gt;
&lt;h3&gt;什么时候应该避免使用 Workspaces？&lt;span class="hx:absolute hx:-mt-20" id="什么时候应该避免使用-workspaces"&gt;&lt;/span&gt;
&lt;a href="#%e4%bb%80%e4%b9%88%e6%97%b6%e5%80%99%e5%ba%94%e8%af%a5%e9%81%bf%e5%85%8d%e4%bd%bf%e7%94%a8-workspaces" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;对于严格隔离的生产环境（Production），最佳实践通常不是使用 Workspaces，而是使用以下更强大的隔离方式：&lt;/p&gt;
&lt;p&gt;独立的 Terraform 配置目录：为 prod 和 dev 创建完全独立的代码目录。这提供了最强的隔离性。&lt;/p&gt;
&lt;p&gt;不同的版本控制分支：main 分支代表生产状态，dev 分支用于开发。&lt;/p&gt;
&lt;p&gt;不同的云账户（AWS Account / Azure Subscription）：这是黄金标准。通过物理账户边界实现绝对的权限和资源隔离。使用 Terraform 云提供商别名或不同的后端来管理不同账户的资源。&lt;/p&gt;
&lt;p&gt;不同的 Terraform 后端：为每个环境使用完全独立的 S3 桶和 DynamoDB 表来存储状态。&lt;/p&gt;
&lt;h2&gt;backend&lt;span class="hx:absolute hx:-mt-20" id="backend"&gt;&lt;/span&gt;
&lt;a href="#backend" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;backend 是 Terraform 用来存储状态文件的地方。&lt;/p&gt;</description></item><item><title>查看文件内容</title><link>https://shipengqi.github.io/devops-learn/docs/linux/01_view_text/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/linux/01_view_text/</guid><description>
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cat&lt;/code&gt;：显示文件的所有内容。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;more&lt;/code&gt;：读取文件，但不需要读取整个文件到内存中，支持向下翻页。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;less&lt;/code&gt;：&lt;code&gt;more&lt;/code&gt; 的反义词，支持上下翻页。&lt;strong&gt;尽量使用 &lt;code&gt;less&lt;/code&gt; 这种不需要读取全部文件的指令，因为在线上执行 &lt;code&gt;cat&lt;/code&gt; 是一件非常危险的事情，这可能导致线上服务器资源不足&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;head&lt;/code&gt;：查看文件开头。
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;head -5 &amp;lt;file&amp;gt;&lt;/code&gt;：显示文件前 5 行的内容。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;head -n 5&lt;/code&gt; 和 &lt;code&gt;head -5&lt;/code&gt; 是一样的。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tail&lt;/code&gt;：查看文件结尾：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tail -n 5 &amp;lt;file&amp;gt;&lt;/code&gt;：显示文件尾部 5 行的内容。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt;：同步显示更新内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wc&lt;/code&gt;：统计文件内容。
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;wc -l &amp;lt;file&amp;gt;&lt;/code&gt;：统计指定文件中的内容有多少行。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wc -w &amp;lt;file&amp;gt;&lt;/code&gt;：统计指定文件中的单词数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wc -m &amp;lt;file&amp;gt;&lt;/code&gt;：统计指定文件中的字符数。&lt;/li&gt;
&lt;li&gt;默认显示行数和文件，使用 &lt;code&gt;cat a.txt | wc -l&lt;/code&gt; 可以只显示 &lt;code&gt;a.txt&lt;/code&gt; 文件的行数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>firewalld</title><link>https://shipengqi.github.io/devops-learn/docs/linux/firewall/02_firewalld/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/linux/firewall/02_firewalld/</guid><description/></item><item><title>内存 性能优化</title><link>https://shipengqi.github.io/devops-learn/docs/linux/perf/02_mem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/linux/perf/02_mem/</guid><description/></item><item><title>打包压缩</title><link>https://shipengqi.github.io/devops-learn/docs/linux/02_tar/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/linux/02_tar/</guid><description>
&lt;p&gt;Linux 里面打包和压缩是分开的两个命令 tar 和 gzip/bzip2。&lt;/p&gt;
&lt;h2&gt;tar&lt;span class="hx:absolute hx:-mt-20" id="tar"&gt;&lt;/span&gt;
&lt;a href="#tar" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tar -cf &amp;lt;压缩文件&amp;gt; &amp;lt;多个目录或文件&amp;gt;&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt; &lt;code&gt;--create&lt;/code&gt; 打包&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt; 指定归档文件。&lt;strong&gt;总是用 -f 参数指定文件名，并放在参数集的最后&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tar -xf &amp;lt;压缩文件&amp;gt;&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-x&lt;/code&gt; &lt;code&gt;--extract&lt;/code&gt; 解压&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tar -xf /tmp/backup.tar -C /root&lt;/code&gt;： 把 &lt;code&gt;/tmp/backup.tar&lt;/code&gt; 文件还原到 &lt;code&gt;/root&lt;/code&gt; 目录下。
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-C&lt;/code&gt; 解压到指定目录&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tar -cf - /etc&lt;/code&gt;： &lt;strong&gt;&lt;code&gt;-&lt;/code&gt; 表示压缩到标准输出。直接输出到标准输出没什么用，需要配合 &lt;code&gt;|&lt;/code&gt;&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;远程备份：&lt;code&gt;tar -cf - /data | ssh user@host &amp;quot;cat &amp;gt; backup.tar&amp;quot;&lt;/code&gt;，无临时文件，高效流式传输&lt;/li&gt;
&lt;li&gt;流式压缩：&lt;code&gt;tar -cf - /data | gzip &amp;gt; backup.tar.gz&lt;/code&gt;，灵活选择压缩工具和参数。&lt;/li&gt;
&lt;li&gt;内容检查：&lt;code&gt;tar -cf - /data | tar -t -f -&lt;/code&gt;，不解压到磁盘即可查看内容。&lt;/li&gt;
&lt;li&gt;计算校验和：&lt;code&gt;tar -cf - /data | md5sum&lt;/code&gt;，直接计算归档包的哈希值。&lt;/li&gt;
&lt;li&gt;加密：&lt;code&gt;tar -cf - /data | gpg -c &amp;gt; backup.tar.gpg&lt;/code&gt;，边打包边加密，提升安全性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="hx:overflow-x-auto hx:mt-6 hx:flex hx:rounded-lg hx:border hx:py-2 hx:ltr:pr-4 hx:rtl:pl-4 hx:contrast-more:border-current hx:contrast-more:dark:border-current hx:border-blue-200 hx:bg-blue-100 hx:text-blue-900 hx:dark:border-blue-200/30 hx:dark:bg-blue-900/30 hx:dark:text-blue-200"&gt;
&lt;div class="hx:ltr:pl-3 hx:ltr:pr-2 hx:rtl:pr-3 hx:rtl:pl-2"&gt;&lt;svg height=1.2em class="hx:inline-block hx:align-middle" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true"&gt;&lt;path stroke-linecap="round" stroke-linejoin="round" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/&gt;&lt;/svg&gt;&lt;/div&gt;
&lt;div class="hx:w-full hx:min-w-0 hx:leading-7"&gt;
&lt;div class="hx:mt-6 hx:leading-7 hx:first:mt-0"&gt;&lt;code&gt;tar -c /etc&lt;/code&gt; 和 &lt;code&gt;tar -cf - /etc&lt;/code&gt; 类似，不同的是没有使用 &lt;code&gt;-f&lt;/code&gt; 指定归档文件。一般默认的行为也是输出到标准输出。但是有一些历史版本不是的。这条命令的行为是隐式且&lt;strong&gt;可能变化&lt;/strong&gt;的。&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;其他常用参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt; &lt;code&gt;--list&lt;/code&gt; 列出归档文件中的内容列表。例如 &lt;code&gt;tar -tf t.tar&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-z&lt;/code&gt; gzip 压缩，&lt;code&gt;tar.gz&lt;/code&gt; 或者 &lt;code&gt;tgz&lt;/code&gt;。需要解压缩就加上 &lt;code&gt;-z&lt;/code&gt; 参数。例如 &lt;code&gt;tar -czf /tmp/backup.tar.gz /etc&lt;/code&gt;。&lt;code&gt;tgz&lt;/code&gt; 是 &lt;code&gt;.tar.gz&lt;/code&gt; 的简写。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-j&lt;/code&gt; bzip2 压缩，后缀 &lt;code&gt;tar.bz2&lt;/code&gt; 或者 &lt;code&gt;tbz2&lt;/code&gt;。需要解压缩就加上 &lt;code&gt;-j&lt;/code&gt; 参数。例如 &lt;code&gt;tar -cjf /tmp/backup.tar.bz2 /etc&lt;/code&gt;。&lt;code&gt;tbz2&lt;/code&gt; 是 &lt;code&gt;.tar.bz2&lt;/code&gt; 的简写。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt; &lt;code&gt;--verbose&lt;/code&gt;：显示指令执行过程。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--exclude&lt;/code&gt; 排除不需要打包的文件或目录。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="hx:overflow-x-auto hx:mt-6 hx:flex hx:rounded-lg hx:border hx:py-2 hx:ltr:pr-4 hx:rtl:pl-4 hx:contrast-more:border-current hx:contrast-more:dark:border-current hx:border-blue-200 hx:bg-blue-100 hx:text-blue-900 hx:dark:border-blue-200/30 hx:dark:bg-blue-900/30 hx:dark:text-blue-200"&gt;
&lt;div class="hx:ltr:pl-3 hx:ltr:pr-2 hx:rtl:pr-3 hx:rtl:pl-2"&gt;&lt;svg height=1.2em class="hx:inline-block hx:align-middle" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true"&gt;&lt;path stroke-linecap="round" stroke-linejoin="round" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/&gt;&lt;/svg&gt;&lt;/div&gt;
&lt;div class="hx:w-full hx:min-w-0 hx:leading-7"&gt;
&lt;div class="hx:mt-6 hx:leading-7 hx:first:mt-0"&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;tar&lt;/code&gt; 命令默认会打包所有文件，包括隐藏文件&lt;/strong&gt;（以点 &lt;code&gt;.&lt;/code&gt; 开头的文件和目录）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tar -czvf backup_with_star.tar.gz *&lt;/code&gt; 不会打包隐藏文件，因为 &lt;strong&gt;shell 会先将 &lt;code&gt;*&lt;/code&gt; 扩展为所有非隐藏的文件名&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gzip&lt;/code&gt;、&lt;code&gt;bzip2&lt;/code&gt; 压缩，&lt;code&gt;gzip&lt;/code&gt; 压缩更快，&lt;code&gt;bzip2&lt;/code&gt; 压缩比例更高。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;应用场景&lt;span class="hx:absolute hx:-mt-20" id="应用场景"&gt;&lt;/span&gt;
&lt;a href="#%e5%ba%94%e7%94%a8%e5%9c%ba%e6%99%af" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;tar -cf - /etc&lt;/code&gt;：&lt;code&gt;-&lt;/code&gt; 表示将 &lt;code&gt;tar&lt;/code&gt; 压缩包写入到标准输出，而不是写入文件。&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 将 /etc 目录打包并用 gzip 压缩，保存为当前目录下的 etc-backup.tar.gz&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;tar -czvf etc-backup.tar.gz /etc/
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 使用更现代的 zstd 压缩，速度更快&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;tar -c --zstd -vf app-backup.tar.zst /var/www/myapp/
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 备份网站目录，但排除日志文件和缓存目录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;tar -czvf site-backup.tar.gz &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; --exclude&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;*.log&amp;#39;&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; --exclude&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./cache&amp;#39;&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; /var/www/html/
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 使用文件列表来排除&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;tar -czvf backup.tar.gz -X exclude-list.txt /data/
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# exclude-list.txt 内容：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# *.tmp&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# logs/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# temp/ &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 不需要特殊参数，tar 默认会保留权限、所有权和时间戳。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 但在解压时，如果用普通用户解压，所有权信息会丢失（除非是 root）。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 备份根目录 / 时要小心使用 --exclude 排除虚拟文件系统。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo tar -czvf full-system-backup.tar.gz --exclude&lt;span class="o"&gt;=&lt;/span&gt;/proc &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt;--exclude&lt;span class="o"&gt;=&lt;/span&gt;/sys --exclude&lt;span class="o"&gt;=&lt;/span&gt;/dev --exclude&lt;span class="o"&gt;=&lt;/span&gt;/tmp --exclude&lt;span class="o"&gt;=&lt;/span&gt;/run &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt;--exclude&lt;span class="o"&gt;=&lt;/span&gt;/mnt --exclude&lt;span class="o"&gt;=&lt;/span&gt;/media /
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 列出 backup.tar.gz 里所有的文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;tar -tzvf backup.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 查找压缩包里是否包含某个配置文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;tar -tzvf backup.tar.gz &lt;span class="p"&gt;|&lt;/span&gt; grep nginx.conf
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 将本地目录打包压缩后，直接通过 SSH 传输到远程服务器保存&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;tar -czv /data/ &lt;span class="p"&gt;|&lt;/span&gt; ssh user@backup-server &lt;span class="s2"&gt;&amp;#34;cat &amp;gt; /backup/server-data-&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;date +%F&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;.tar.gz&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 或者直接在远程服务器上解压&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;tar -czv /data/ &lt;span class="p"&gt;|&lt;/span&gt; ssh user@backup-server &lt;span class="s2"&gt;&amp;#34;tar -xz -C /remote/backup/dir/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 打包过去 7 天内修改过的 .log 文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;find /var/log -name &lt;span class="s2"&gt;&amp;#34;*.log&amp;#34;&lt;/span&gt; -mtime -7 -exec tar -rvf weekly-logs.tar &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 然后再压缩&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;gzip weekly-logs.tar&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="hx:overflow-x-auto hx:mt-6 hx:flex hx:rounded-lg hx:border hx:py-2 hx:ltr:pr-4 hx:rtl:pl-4 hx:contrast-more:border-current hx:contrast-more:dark:border-current hx:border-blue-200 hx:bg-blue-100 hx:text-blue-900 hx:dark:border-blue-200/30 hx:dark:bg-blue-900/30 hx:dark:text-blue-200"&gt;
&lt;div class="hx:ltr:pl-3 hx:ltr:pr-2 hx:rtl:pr-3 hx:rtl:pl-2"&gt;&lt;svg height=1.2em class="hx:inline-block hx:align-middle" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true"&gt;&lt;path stroke-linecap="round" stroke-linejoin="round" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/&gt;&lt;/svg&gt;&lt;/div&gt;
&lt;div class="hx:w-full hx:min-w-0 hx:leading-7"&gt;
&lt;div class="hx:mt-6 hx:leading-7 hx:first:mt-0"&gt;&lt;p&gt;&lt;code&gt;tar -czv /data/ | ssh user@backup-server &amp;quot;cat &amp;gt; /backup/server-data-$(date +%F).tar.gz&amp;quot;&lt;/code&gt; 使用 &lt;code&gt;cat &amp;gt; &lt;/code&gt; 的原因：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; 是 shell 的一个操作符，它的作用是将它左边命令的标准输出，重定向到右边的文件。&lt;strong&gt;不会主动去读取它自己的标准输入&lt;/strong&gt;（stdin）。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description></item><item><title>目录结构</title><link>https://shipengqi.github.io/devops-learn/docs/terraform/project/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/terraform/project/</guid><description>
&lt;p&gt;如果 &lt;code&gt;.tfvars&lt;/code&gt; 文件包含敏感数据，例如密码、访问密钥等，建议将其添加到 &lt;code&gt;.gitignore&lt;/code&gt; 文件中，避免将敏感数据提交到 Git 仓库中。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.terraform.lock.hcl&lt;/code&gt; 包含了版本信息，应该提交到仓库里。&lt;/p&gt;</description></item><item><title>I/O 性能优化</title><link>https://shipengqi.github.io/devops-learn/docs/linux/perf/03_io/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/linux/perf/03_io/</guid><description/></item><item><title>操作文本</title><link>https://shipengqi.github.io/devops-learn/docs/linux/03_text_operation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/linux/03_text_operation/</guid><description>
&lt;p&gt;文本搜索一般会使用正则表达式。&lt;/p&gt;
&lt;h2&gt;元字符&lt;span class="hx:absolute hx:-mt-20" id="元字符"&gt;&lt;/span&gt;
&lt;a href="#%e5%85%83%e5%ad%97%e7%ac%a6" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;常用的元字符：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.&lt;/code&gt; 匹配除了换行符外的任意一个字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*&lt;/code&gt; 匹配任意个跟它前面的字符&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;[]&lt;/code&gt; 匹配方括号中的字符类中的任意一个&lt;/strong&gt;，比如 &lt;code&gt;[Hh]ello&lt;/code&gt; 就可以匹配 hello 和 Hello。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^&lt;/code&gt; 匹配开头&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$&lt;/code&gt; 匹配结尾&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\&lt;/code&gt; 转义字符&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;扩展元字符：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;+&lt;/code&gt; 匹配前面的正则表达式至少出现一次&lt;/li&gt;
&lt;li&gt;&lt;code&gt;?&lt;/code&gt; 匹配前面的正则表达式出现一次或者零次&lt;/li&gt;
&lt;li&gt;&lt;code&gt;|&lt;/code&gt; 匹配前面或者后面的正则表达式&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;grep&lt;span class="hx:absolute hx:-mt-20" id="grep"&gt;&lt;/span&gt;
&lt;a href="#grep" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;grep&lt;/code&gt; 用来查找文件里符合条件的字符串。 &lt;code&gt;grep&lt;/code&gt; 会把符合条件的行显示出来。&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@pooky init.d&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# grep password /root/anaconda-ks.cfg&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Root password&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@pooky init.d&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# grep -i password /root/anaconda-ks.cfg # -i 忽略大小写&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Root password&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@pooky ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# grep pass.... /root/anaconda-ks.cfg # 可以使用元字符 . 匹配任意一个字符&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;auth --enableshadow --passalgo&lt;span class="o"&gt;=&lt;/span&gt;sha512
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Root password&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@pooky ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# grep pass....$ /root/anaconda-ks.cfg # $ 表示结尾&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;auth --enableshadow --passalgo&lt;span class="o"&gt;=&lt;/span&gt;sha512
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Root password&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@pooky ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# grep pass...d$ /root/anaconda-ks.cfg&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Root password&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@pooky ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# grep pass.*$ /root/anaconda-ks.cfg # .* 就表示任意个字符&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;auth --enableshadow --passalgo&lt;span class="o"&gt;=&lt;/span&gt;sha512
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Root password&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user --groups&lt;span class="o"&gt;=&lt;/span&gt;wheel --name&lt;span class="o"&gt;=&lt;/span&gt;admin --passwd&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$6$Lh0jvsS&lt;/span&gt;/YklFVYDM&lt;span class="nv"&gt;$WjPFI&lt;/span&gt;.WaMd3be/qiyFVUQkjEFN0PGQcnRTJFUDejJMUS24DA.M2rJ039hi/ubRiaNY4QNt661FARlxZqL.nCs0 --iscrypted --gecos&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;admin&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@pooky ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# grep ^# /root/anaconda-ks.cfg # 以 # 为开头的行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#version=DEVEL&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# System authorization information&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Use CDROM installation media&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Use graphical install&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;常用参数&lt;span class="hx:absolute hx:-mt-20" id="常用参数"&gt;&lt;/span&gt;
&lt;a href="#%e5%b8%b8%e7%94%a8%e5%8f%82%e6%95%b0" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;：显示行号&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-C：num&lt;/code&gt; &lt;code&gt;--context&lt;/code&gt;：显示匹配行前后（Context） 各 num 行内容。最常用&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-A num&lt;/code&gt; &lt;code&gt;--after-context&lt;/code&gt;：显示匹配行之后（After） 的 num 行内容。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-B num&lt;/code&gt; &lt;code&gt;--before-context&lt;/code&gt;：显示匹配行之前（Before） 的 num 行内容。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt; &lt;code&gt;--recursive&lt;/code&gt;：递归搜索目录下的所有文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-o&lt;/code&gt;：只输出匹配到的部分（字符串），而不是输出包含匹配模式的整行&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-E&lt;/code&gt;：扩展正则表达式 让 &lt;code&gt;()&lt;/code&gt;、&lt;code&gt;{}&lt;/code&gt;、&lt;code&gt;|&lt;/code&gt;、&lt;code&gt;+&lt;/code&gt; 等元字符不再需要反斜杠转义。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;：忽略大小写。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;：&lt;strong&gt;反向选择&lt;/strong&gt;，即过滤掉匹配指定模式的行，只&lt;strong&gt;显示那些不匹配的行&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;应用场景&lt;span class="hx:absolute hx:-mt-20" id="应用场景"&gt;&lt;/span&gt;
&lt;a href="#%e5%ba%94%e7%94%a8%e5%9c%ba%e6%99%af" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 在日志中查找所有异常，并显示行号和前后 5 行上下文&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;grep -n -C &lt;span class="m"&gt;5&lt;/span&gt; -i &lt;span class="s2"&gt;&amp;#34;exception\|error\|fail&amp;#34;&lt;/span&gt; /var/log/app/app.log
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 查找今天的错误 (结合日期过滤)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;grep &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;date &lt;span class="s1"&gt;&amp;#39;+%Y-%m-%d&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt; /var/log/app.log &lt;span class="p"&gt;|&lt;/span&gt; grep -i error
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 查找指定时间范围的日志&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# -A 999999: 显示匹配行之后的 999999 行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# -B 999999: 显示匹配行之前的 999999 行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;grep &lt;span class="s2"&gt;&amp;#34;2024-05-24 10:15:&amp;#34;&lt;/span&gt; app.log -A &lt;span class="m"&gt;999999&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;#34;2024-05-24 10:20:&amp;#34;&lt;/span&gt; -B &lt;span class="m"&gt;999999&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 使用 sed（更可靠）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sed -n &lt;span class="s1"&gt;&amp;#39;/2024-05-24 10:15:/,/2024-05-24 10:20:/p&amp;#39;&lt;/span&gt; app.log
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 使用 awk&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 假如日志格式是 YYYY-MM-DD HH:MM:SS [日志内容]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# $1 是日期部分（如 2024-05-24），$2 是时间部分（如 10:15:23）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# $1&amp;#34; &amp;#34;$2 的意思是字符串连接，重新组成完整的时间字符串，然后进行字符串比较。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;awk &lt;span class="s1"&gt;&amp;#39;$1&amp;#34; &amp;#34;$2 &amp;gt;= &amp;#34;2024-05-24 10:15:00&amp;#34; &amp;amp;&amp;amp; $1&amp;#34; &amp;#34;$2 &amp;lt;= &amp;#34;2024-05-24 10:20:00&amp;#34;&amp;#39;&lt;/span&gt; app.log
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 统计404状态的请求&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;grep &lt;span class="s2"&gt;&amp;#34; 404 &amp;#34;&lt;/span&gt; /var/log/nginx/access.log &lt;span class="p"&gt;|&lt;/span&gt; wc -l
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 找出访问量最大的IP (结合awk和sort)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;grep -oE &lt;span class="s2"&gt;&amp;#34;\b([0-9]{1,3}\.){3}[0-9]{1,3}\b&amp;#34;&lt;/span&gt; access.log &lt;span class="p"&gt;|&lt;/span&gt; sort &lt;span class="p"&gt;|&lt;/span&gt; uniq -c &lt;span class="p"&gt;|&lt;/span&gt; sort -nr &lt;span class="p"&gt;|&lt;/span&gt; head -10
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 通过一个唯一的TraceID来追踪一个请求在整个集群中的流转&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;grep &lt;span class="s2"&gt;&amp;#34;abc123-trace-id&amp;#34;&lt;/span&gt; /var/log/microservice/*.log+&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;uniq&lt;span class="hx:absolute hx:-mt-20" id="uniq"&gt;&lt;/span&gt;
&lt;a href="#uniq" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;uniq&lt;/code&gt; 是一个用于报告或忽略文件中的重复行的过滤器。它的一个关键前提是：&lt;strong&gt;输入必须是排序过的，因为 &lt;code&gt;uniq&lt;/code&gt; 只会检测相邻的重复行&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-c&lt;/code&gt; &lt;code&gt;--count&lt;/code&gt; 在每行前加上该行重复出现的次数。最常用参数，用于统计重复项的频率&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt; &lt;code&gt;--repeated&lt;/code&gt; &lt;strong&gt;仅显示重复出现的行&lt;/strong&gt;（每组重复行只显示一次）。快速找出有哪些内容是重复的。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt; &lt;code&gt;--unique&lt;/code&gt; &lt;strong&gt;仅显示不曾重复出现的行&lt;/strong&gt;（独一无二的行）。找出只出现一次的条目，例如排查异常的单次访问。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;应用场景&lt;span class="hx:absolute hx:-mt-20" id="应用场景-1"&gt;&lt;/span&gt;
&lt;a href="#%e5%ba%94%e7%94%a8%e5%9c%ba%e6%99%af-1" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 有一个用户列表 users.txt，想知道有哪些用户是重复的&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sort users.txt &lt;span class="p"&gt;|&lt;/span&gt; uniq -d
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 找出只出现一次的异常条目&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;grep &lt;span class="s2"&gt;&amp;#34;Failed password&amp;#34;&lt;/span&gt; /var/log/secure &lt;span class="p"&gt;|&lt;/span&gt; sort &lt;span class="p"&gt;|&lt;/span&gt; uniq -u&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;日志格式为 &lt;code&gt;[日期 时间] 错误信息&lt;/code&gt;。需要统计有哪些类型的错误信息，而不关心它们发生的具体时间。&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;2023-10-27 10:01:23&lt;span class="o"&gt;]&lt;/span&gt; Connection timeout
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;2023-10-27 10:05:45&lt;span class="o"&gt;]&lt;/span&gt; Permission denied
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;2023-10-27 10:07:12&lt;span class="o"&gt;]&lt;/span&gt; Connection timeout
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;2023-10-27 10:08:33&lt;span class="o"&gt;]&lt;/span&gt; Disk full&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 先使用sed/awk处理掉`[`和`]`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sed &lt;span class="s1"&gt;&amp;#39;s/\[.*\] //&amp;#39;&lt;/span&gt; error.log &lt;span class="p"&gt;|&lt;/span&gt; sort &lt;span class="p"&gt;|&lt;/span&gt; uniq -c&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;sort&lt;span class="hx:absolute hx:-mt-20" id="sort"&gt;&lt;/span&gt;
&lt;a href="#sort" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;对文本行进行排序，几乎总是作为数据管道（pipe）的关键一环，与 &lt;code&gt;uniq&lt;/code&gt;, &lt;code&gt;awk&lt;/code&gt;, &lt;code&gt;head&lt;/code&gt; 等命令组合，用于日志分析、数据统计和报告生成。&lt;/p&gt;
&lt;p&gt;常用参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;：按数字大小进行排序，而不是字母顺序。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt; &lt;code&gt;--reverse&lt;/code&gt;：逆序排序（降序）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-k&lt;/code&gt;：指定排序的键。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt; &lt;code&gt;--field-separator=SEP&lt;/code&gt; 指定字段分隔符，默认是空格。处理 CSV 文件或以特定字符（如 &lt;code&gt;:, ,&lt;/code&gt;）分隔的日志。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt; &lt;code&gt;--unique&lt;/code&gt;：在排序的同时去除重复行。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o&lt;/code&gt; &lt;code&gt;--output=FILE&lt;/code&gt;：将结果输出到指定文件，可以覆盖原文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-h&lt;/code&gt;: 人类可读数字排序&lt;/strong&gt;，能正确比较 2K, 1M, 100G 的大小。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 查看当前最消耗内存的10个进程&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ps aux &lt;span class="p"&gt;|&lt;/span&gt; sort -rnk &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; head -10
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 按用户 ID（第三列）从小到大排序 /etc/passwd 文件。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sort -t &lt;span class="s1"&gt;&amp;#39;:&amp;#39;&lt;/span&gt; -nk &lt;span class="m"&gt;3&lt;/span&gt; /etc/passwd&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="hx:overflow-x-auto hx:mt-6 hx:flex hx:rounded-lg hx:border hx:py-2 hx:ltr:pr-4 hx:rtl:pl-4 hx:contrast-more:border-current hx:contrast-more:dark:border-current hx:border-blue-200 hx:bg-blue-100 hx:text-blue-900 hx:dark:border-blue-200/30 hx:dark:bg-blue-900/30 hx:dark:text-blue-200"&gt;
&lt;div class="hx:ltr:pl-3 hx:ltr:pr-2 hx:rtl:pr-3 hx:rtl:pl-2"&gt;&lt;svg height=1.2em class="hx:inline-block hx:align-middle" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true"&gt;&lt;path stroke-linecap="round" stroke-linejoin="round" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/&gt;&lt;/svg&gt;&lt;/div&gt;
&lt;div class="hx:w-full hx:min-w-0 hx:leading-7"&gt;
&lt;div class="hx:mt-6 hx:leading-7 hx:first:mt-0"&gt;&lt;p&gt;万能管道公式：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;获取数据 (awk/grep/sed) -&amp;gt; 排序 (sort) -&amp;gt; 去重统计 (uniq -c) -&amp;gt; 再次排序 (sort -nr) -&amp;gt; 取顶部结果 (head)&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;sed&lt;span class="hx:absolute hx:-mt-20" id="sed"&gt;&lt;/span&gt;
&lt;a href="#sed" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;sed&lt;/code&gt; 命令一般用于对文本内容做替换：&lt;code&gt;sed [-hnV][-e &amp;lt;script&amp;gt;][-f &amp;lt;script 文件&amp;gt;] [文本文件]&lt;/code&gt;，例如：&lt;code&gt;sed '/user1/s/user1/u1' /etc/passwd&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;常用参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-e&lt;/code&gt;：指定一个或多个 &lt;code&gt;sed&lt;/code&gt; 动作，多个动作之间用分号 &lt;code&gt;;&lt;/code&gt; 隔开。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt;：将 sed 的动作写在一个文件内，用 &lt;code&gt;–f filename&lt;/code&gt; 执行 filename 内的 sed 动作&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-i[后缀]&lt;/code&gt;：直接修改文件内容，这是运维中最常用也最危险的选项&lt;/strong&gt;。务必谨慎！
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-i.bak&lt;/code&gt;：编辑前先创建备份文件，原文件会被保存为 file.txt.bak。（强烈推荐的习惯）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;：取消默认的完整输出，通常与 &lt;code&gt;p&lt;/code&gt; 命令结合使用，只打印那些被修改或匹配的行。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;：不需要转义&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;替换&lt;span class="hx:absolute hx:-mt-20" id="替换"&gt;&lt;/span&gt;
&lt;a href="#%e6%9b%bf%e6%8d%a2" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;sed 's/old/new/' filename&lt;/code&gt;，将文件中所有的 &lt;code&gt;old&lt;/code&gt; 替换为 &lt;code&gt;new&lt;/code&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sed -e 's/old/new/' -e 's/old/new/' filename ...&lt;/code&gt;，&lt;strong&gt;可以执行多次替换脚本但是不能省略 &lt;code&gt;-e&lt;/code&gt;&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sed -i 's/old/nnew/' 's/old/new/' filename ...&lt;/code&gt;，直接修改文件内容&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sed 's/foo/bar/g' file.txt&lt;/code&gt; 将全文所有的 foo 替换为 bar
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;g&lt;/code&gt;：全局替换，&lt;strong&gt;不加 &lt;code&gt;g&lt;/code&gt; 只替换每一行中第一个匹配到的&lt;/strong&gt; &amp;ldquo;foo&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;p&lt;/code&gt;：打印发生替换的那一行。与 &lt;code&gt;-n&lt;/code&gt; 选项连用。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;i&lt;/code&gt; 或 &lt;code&gt;I&lt;/code&gt;：忽略大小写进行匹配。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;删除&lt;span class="hx:absolute hx:-mt-20" id="删除"&gt;&lt;/span&gt;
&lt;a href="#%e5%88%a0%e9%99%a4" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;sed /匹配模式/d&lt;/code&gt; 删除匹配到的行：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sed '/^#/d' file.txt&lt;/code&gt;，删除所有以 &lt;code&gt;#&lt;/code&gt; 开头的行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sed 's/^/# /' file.txt&lt;/code&gt;，在每一行的行首添加 &lt;code&gt;#&lt;/code&gt;，相当于注释掉所有行&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;打印&lt;span class="hx:absolute hx:-mt-20" id="打印"&gt;&lt;/span&gt;
&lt;a href="#%e6%89%93%e5%8d%b0" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;p&lt;/code&gt; 打印命令，&lt;strong&gt;打印匹配的行&lt;/strong&gt;。通常与 &lt;code&gt;-n&lt;/code&gt; 选项一起使用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sed -n '/error/p' /var/log/syslog&lt;/code&gt;，只打印包含 &lt;code&gt;error&lt;/code&gt; 的行，相当于 &lt;code&gt;grep &amp;quot;error&amp;quot;&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;追加&lt;span class="hx:absolute hx:-mt-20" id="追加"&gt;&lt;/span&gt;
&lt;a href="#%e8%bf%bd%e5%8a%a0" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;a\text&lt;/code&gt;：在指定行后追加文本。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sed '/server_name www.example.com;/a\ return 301 https://$host$request_uri;' nginx.conf&lt;/code&gt;，在 server_name 行后追加一条 301 重定向规则。&lt;/p&gt;
&lt;h3&gt;插入文本&lt;span class="hx:absolute hx:-mt-20" id="插入文本"&gt;&lt;/span&gt;
&lt;a href="#%e6%8f%92%e5%85%a5%e6%96%87%e6%9c%ac" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;i\text&lt;/code&gt;：在指定行前插入文本。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sed '3i\# This is a new line' file.txt&lt;/code&gt;，在第 3 行之前插入一行注释 。&lt;/p&gt;
&lt;h3&gt;替换整行&lt;span class="hx:absolute hx:-mt-20" id="替换整行"&gt;&lt;/span&gt;
&lt;a href="#%e6%9b%bf%e6%8d%a2%e6%95%b4%e8%a1%8c" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;c\text&lt;/code&gt;：替换整行文本。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sed '/old_line/c\This is the new line content' file.txt&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;行范围&lt;span class="hx:absolute hx:-mt-20" id="行范围"&gt;&lt;/span&gt;
&lt;a href="#%e8%a1%8c%e8%8c%83%e5%9b%b4" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;n&lt;/code&gt;：第 n 行。&lt;code&gt;sed '5s/foo/bar/'&lt;/code&gt; 只替换第 5 行的 foo&lt;/li&gt;
&lt;li&gt;&lt;code&gt;n,m&lt;/code&gt;：第 n 到 m 行。&lt;code&gt;sed '10,20s/foo/bar/g'&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$&lt;/code&gt;：最后一行。&lt;code&gt;sed '$s/foo/bar/'&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/regexp/&lt;/code&gt;：匹配正则表达式的行。&lt;code&gt;sed '/start/,/end/d'&lt;/code&gt; 删除从包含 start 的行到包含 end 的行之间的所有内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;应用场景&lt;span class="hx:absolute hx:-mt-20" id="应用场景-2"&gt;&lt;/span&gt;
&lt;a href="#%e5%ba%94%e7%94%a8%e5%9c%ba%e6%99%af-2" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 将旧 IP 地址替换为新 IP 地址，并创建备份文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sed -i.bak &lt;span class="s1"&gt;&amp;#39;s/192.168.1.100/192.168.1.200/g&amp;#39;&lt;/span&gt; /etc/nginx/conf.d/*.conf
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 修改文件中的路径（注意：分隔符可以用其他字符，如 #，以避免和路径中的 / 冲突）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 旧路径 /old/path 全局替换为新路径 /new/path&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# `#` 作为分隔符，而不是常见的 `/`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sed -i &lt;span class="s1"&gt;&amp;#39;s#/old/path#/new/path#g&amp;#39;&lt;/span&gt; config.ini
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 删除配置文件中的所有空行和注释行（以 # 开头）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sed -i &lt;span class="s1"&gt;&amp;#39;/^#/d; /^$/d&amp;#39;&lt;/span&gt; /etc/foo.conf
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 或者写成多条 -e&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sed -i -e &lt;span class="s1"&gt;&amp;#39;/^#/d&amp;#39;&lt;/span&gt; -e &lt;span class="s1"&gt;&amp;#39;/^$/d&amp;#39;&lt;/span&gt; /etc/foo.conf
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 只查看日志文件中特定时间范围内的行（例如 14:00 到 14:30）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sed -n &lt;span class="s1"&gt;&amp;#39;/May 10 14:00:00/,/May 10 14:30:00/p&amp;#39;&lt;/span&gt; /var/log/syslog
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 提取 Jenkins 构建日志中 Git 提交的哈希值（假设格式为 Commit: abc123def）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;cat build.log &lt;span class="p"&gt;|&lt;/span&gt; sed -n &lt;span class="s1"&gt;&amp;#39;s/.*Commit: \([a-f0-9]\{7,40\}\).*/\1/p&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 提取本机的 IP 地址（假设是 eth0 网卡）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ip addr show eth0 &lt;span class="p"&gt;|&lt;/span&gt; sed -n &lt;span class="s1"&gt;&amp;#39;s/.*inet \(192\.168[^/]*\).*/\1/p&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 在脚本中动态修改配置文件中的端口号&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;NEW_PORT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;8080&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sed -i &lt;span class="s2"&gt;&amp;#34;s/^Port.*/Port &lt;/span&gt;&lt;span class="nv"&gt;$NEW_PORT&lt;/span&gt;&lt;span class="s2"&gt;/&amp;#34;&lt;/span&gt; /etc/ssh/sshd_config
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 直接删除文件 script.sh 中所有行尾的回车符（\r）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# \r 代表回车符（Carriage Return），是 Windows 换行符的一部分&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# sed 会读取数据，直到遇到换行符 \n 为止，不是绝对的文件末尾&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sed -i &lt;span class="s1"&gt;&amp;#39;s/\r$//&amp;#39;&lt;/span&gt; script.sh &lt;span class="c1"&gt;# 这是一个非常常见的用法！&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 在每行的行首或行尾添加内容&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sed -i &lt;span class="s1"&gt;&amp;#39;s/^/HEADER: /&amp;#39;&lt;/span&gt; logfile.txt &lt;span class="c1"&gt;# 行首添加&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sed -i &lt;span class="s1"&gt;&amp;#39;s/$/\\n/&amp;#39;&lt;/span&gt; file.txt &lt;span class="c1"&gt;# 行尾添加换行符（实际是追加\n字符）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;使用扩展正则 &lt;code&gt;-r&lt;/code&gt;：为了让命令更清晰易读，建议总是使用 &lt;code&gt;sed -r&lt;/code&gt;，避免过多的反斜杠 &lt;code&gt;\&lt;/code&gt;&lt;/strong&gt;。&lt;/p&gt;
&lt;h2&gt;awk&lt;span class="hx:absolute hx:-mt-20" id="awk"&gt;&lt;/span&gt;
&lt;a href="#awk" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;awk 一般用于对文本内容进行统计，按需要的格式进行输出。一般是作为 sed 的一个补充。awk 可以看成是一种编程语言。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;特别擅长处理结构化文本数据（如日志、CSV、命令输出等）&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;awk 和 sed 的区别：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;awk 用于比较规范的文本处理，用于统计数量并输出指定字段&lt;/li&gt;
&lt;li&gt;sed 一般用于把不规范的文本处理为规范的文本&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;awk 的流程控制：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;输入数据前例程 &lt;code&gt;BEGIN{}&lt;/code&gt;&lt;/strong&gt;，读入数据前执行，做一些预处理操作。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;主输入循环 &lt;code&gt;{}&lt;/code&gt;&lt;/strong&gt;，处理读取的每一行。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;所有文件读取完成例程 &lt;code&gt;END{}&lt;/code&gt;&lt;/strong&gt;，读取操作完成后执行，做一些数据汇总。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;常用的写法是只写主输入循环。&lt;/p&gt;
&lt;p&gt;记录和字段：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每一行叫做 awk 的记录。&lt;/li&gt;
&lt;li&gt;使用空格、制表符分隔开的单词叫做字段。&lt;/li&gt;
&lt;li&gt;可以指定分隔的字段。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;字段的引用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;$1&lt;/code&gt; &lt;code&gt;$2&lt;/code&gt; &amp;hellip; &lt;code&gt;$n&lt;/code&gt; 表示每一个字段，&lt;code&gt;$0&lt;/code&gt; 表示当前行&lt;/strong&gt;，&lt;code&gt;awk '{print $1, $2, $3} filename'&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;$NF 是最后一个字段，和 &lt;code&gt;NF&lt;/code&gt; 不一样&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-F&lt;/code&gt; 改变字段的分隔符&lt;/strong&gt;，&lt;code&gt;awk -F ',' '{print $1, $2, $3}' filename&lt;/code&gt;，分隔符可以使用正则表达式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;系统变量：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;NR&lt;/code&gt; 表示当前处理的是第几行&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;NF&lt;/code&gt; 字段数量&lt;/strong&gt;，所以最后一个字段内容可以用 &lt;code&gt;$NF&lt;/code&gt; 取出，&lt;strong&gt;&lt;code&gt;$(NF-1)&lt;/code&gt; 代表倒数第二个字段&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;FS&lt;/code&gt; 字段分隔符&lt;/strong&gt;，默认是空格和制表符。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RS&lt;/code&gt; 行分隔符，用于分割每一行，默认是换行符。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OFS&lt;/code&gt; 输出的字段分隔符，用于打印时分隔字段，默认为空格。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;ORS&lt;/code&gt; 输出行分隔符&lt;/strong&gt;，用于打印时分隔记录，默认为换行符。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;FNR&lt;/code&gt; 行数&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;常用参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-F&lt;/code&gt;：指定输入字段分隔符。这是最常用的参数。
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;awk -F: '{print $1}' /etc/passwd&lt;/code&gt; // 使用冒号 : 作为分隔符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;awk -F'[ :]' '{print $2}' file&lt;/code&gt; // 使用空格或冒号作为分隔符（正则表达式）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;：定义变量，用于从 Shell 向 awk 脚本传递值。&lt;code&gt;awk -v name=&amp;quot;Alice&amp;quot; '{print name, $1}' file.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt;：从脚本文件中读取 awk 命令，用于复杂的脚本。&lt;code&gt;awk -f script.awk data.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;应用场景&lt;span class="hx:absolute hx:-mt-20" id="应用场景-3"&gt;&lt;/span&gt;
&lt;a href="#%e5%ba%94%e7%94%a8%e5%9c%ba%e6%99%af-3" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 提取 ps 命令输出的进程 ID 和命令 (PID 和 CMD)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ps aux &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{print $2, $11}&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; head
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 获取所有登录的用户名&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;who &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{print $1}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 分析 /etc/passwd，提取用户名和使用的 shell&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;awk -F: &lt;span class="s1"&gt;&amp;#39;{print $1, $7}&amp;#39;&lt;/span&gt; /etc/passwd
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 分析 /etc/passwd，提取用户名和使用的 shell&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;awk -F: &lt;span class="s1"&gt;&amp;#39;{print $1, $7}&amp;#39;&lt;/span&gt; /etc/passwd
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 正则过滤&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;awk -F &lt;span class="s2"&gt;&amp;#34;&amp;#39;&amp;#34;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/^menu/{ print $1 }&amp;#39;&lt;/span&gt; /boot/grub2/grub.cfg
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;menuentry
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;menuentry
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;menuentry
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 条件过滤&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 显示磁盘使用率超过 80% 的分区&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;df -h &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;$5+0 &amp;gt; 80 {print $1, $5}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 找出内存使用超过 100MB 的进程&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ps aux &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;$6 &amp;gt; 100000 {print $11, $6/1024 &amp;#34;MB&amp;#34;}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 打印第 5 到第 10 行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;awk &lt;span class="s1"&gt;&amp;#39;NR&amp;gt;=5 &amp;amp;&amp;amp; NR&amp;lt;=10&amp;#39;&lt;/span&gt; /var/log/syslog
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 计算文件总大小（第5列是大小）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ls -l &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{sum += $5} END {print &amp;#34;Total Size: &amp;#34;, sum, &amp;#34;bytes&amp;#34;}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 统计日志中每种 HTTP 状态码的出现次数（假设第9列是状态码）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;awk &lt;span class="s1"&gt;&amp;#39;{status_count[$9]++} END {for(s in status_count) print s, status_count[s]}&amp;#39;&lt;/span&gt; access.log
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 计算系统平均负载（最后15分钟是$3）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;uptime &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{print &amp;#34;15-min load average: &amp;#34;, $NF}&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;# NF 是最后一个字段&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 格式化输出 /etc/passwd&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;awk -F: &lt;span class="s1"&gt;&amp;#39;BEGIN {printf &amp;#34;%-15s %-10s\n&amp;#34;, &amp;#34;Username&amp;#34;, &amp;#34;Shell&amp;#34;} {printf &amp;#34;%-15s %-10s\n&amp;#34;, $1, $7}&amp;#39;&lt;/span&gt; /etc/passwd &lt;span class="p"&gt;|&lt;/span&gt; head
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 为输出添加表头&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;netstat -tnlp &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;BEGIN {print &amp;#34;Proto Recv-Q Send-Q Local Address&amp;#34;} NR&amp;gt;2 {print $1, $2, $3, $4}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 假设 Nginx 访问日志格式为&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 192.168.1.1 - - [10/May/2023:14:12:33 +0800] &amp;#34;GET /index.html HTTP/1.1&amp;#34; 200 1234&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 统计每个 IP 的访问次数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;awk &lt;span class="s1"&gt;&amp;#39;{ip_count[$1]++} END {for(ip in ip_count) print ip, ip_count[ip]}&amp;#39;&lt;/span&gt; access.log &lt;span class="p"&gt;|&lt;/span&gt; sort -nr -k2
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 统计最受欢迎的 URL（第7列）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;awk &lt;span class="s1"&gt;&amp;#39;{url_count[$7]++} END {for(url in url_count) print url_count[url], url}&amp;#39;&lt;/span&gt; access.log &lt;span class="p"&gt;|&lt;/span&gt; sort -nr &lt;span class="p"&gt;|&lt;/span&gt; head&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h4&gt;表达式&lt;span class="hx:absolute hx:-mt-20" id="表达式"&gt;&lt;/span&gt;
&lt;a href="#%e8%a1%a8%e8%be%be%e5%bc%8f" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;赋值操作符：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;=&lt;/code&gt;，&lt;code&gt;var1 = &amp;quot;name&amp;quot;&lt;/code&gt;，&lt;code&gt;var2 = $1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;++&lt;/code&gt; &lt;code&gt;--&lt;/code&gt; &lt;code&gt;+=&lt;/code&gt; &lt;code&gt;-=&lt;/code&gt; &lt;code&gt;*=&lt;/code&gt; &lt;code&gt;/+&lt;/code&gt; &lt;code&gt;%=&lt;/code&gt; &lt;code&gt;^=&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;算数操作符：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;+&lt;/code&gt; &lt;code&gt;-&lt;/code&gt; &lt;code&gt;*&lt;/code&gt; &lt;code&gt;/&lt;/code&gt; &lt;code&gt;%&lt;/code&gt; &lt;code&gt;^&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;系统变量：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;FS&lt;/code&gt; 字段分隔符，默认是空格和制表符。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RS&lt;/code&gt; 行分隔符，用于分割每一行，默认是换行符。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OFS&lt;/code&gt; 输出的字段分隔符，用于打印时分隔字段，默认为空格。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ORS&lt;/code&gt; 输出行分隔符，用于打印时分隔记录，默认为换行符。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NR&lt;/code&gt; 表示当前处理的是第几行。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FNR&lt;/code&gt; 行数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NF&lt;/code&gt; 字段数量，所以最后一个字段内容可以用 &lt;code&gt;$NF&lt;/code&gt; 取出，&lt;code&gt;$(NF-1)&lt;/code&gt; 代表倒数第二个字段。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# head -5 /etc/passwd | awk &amp;#39;BEGIN{FS=&amp;#34;:&amp;#34;}{print $1}&amp;#39; # BEGIN{FS=&amp;#34;:&amp;#34;} 表示在读入之前设置字段分隔符为 :，也可以写成 awk -F &amp;#34;:&amp;#34; &amp;#39;{print $1}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;root
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;bin
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;daemon
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;adm
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;lp
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# head -5 /etc/passwd | awk &amp;#39;BEGIN{FS=&amp;#34;:&amp;#34;}{print $1,$2}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;root x &lt;span class="c1"&gt;# 可以看出输出的字段分隔符默认为空格&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;bin x
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;daemon x
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;adm x
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;lp x
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# head -5 /etc/passwd | awk &amp;#39;BEGIN{FS=&amp;#34;:&amp;#34;;OFS=&amp;#34;-&amp;#34;}{print $1,$2}&amp;#39; # 输出的字段分隔符设置为 -&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;root-x
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;bin-x
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;daemon-x
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;adm-x
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;lp-x
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# head -5 /etc/passwd | awk &amp;#39;BEGIN{RS=&amp;#34;:&amp;#34;}{print $0}&amp;#39; # 已 : 为行分隔符，输出每一行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;root
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;x
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;root
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;/root
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;bin
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;x
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;bin
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;/bin
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;/sbin/nologin
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;daemon
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# head -5 /etc/passwd | awk &amp;#39;{print NR}&amp;#39; # 显示行号&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# head -5 /etc/passwd | awk &amp;#39;{print NR, $0}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;1&lt;/span&gt; root:x:0:0:root:/root:/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;2&lt;/span&gt; bin:x:1:1:bin:/bin:/sbin/nologin
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;3&lt;/span&gt; daemon:x:2:2:daemon:/sbin:/sbin/nologin
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;4&lt;/span&gt; adm:x:3:4:adm:/var/adm:/sbin/nologin
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;5&lt;/span&gt; lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# awk &amp;#39;{print FNR, $0}&amp;#39; /etc/hosts /etc/hosts # FNR 会重排行号&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;1&lt;/span&gt; 127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="c1"&gt;#::1 localhost localhost.localdomain localhost6 localhost6.localdomain6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;4&lt;/span&gt; 16.187.191.150 SGDLITVM0905.hpeswlab.net SGDLITVM0905
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;1&lt;/span&gt; 127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="c1"&gt;#::1 localhost localhost.localdomain localhost6 localhost6.localdomain6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;4&lt;/span&gt; 16.187.191.150 SGDLITVM0905.hpeswlab.net SGDLITVM0905
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;You have new mail in /var/spool/mail/root
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# awk &amp;#39;{print NR, $0}&amp;#39; /etc/hosts /etc/hosts # FNR 不会重排行号&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;1&lt;/span&gt; 127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="c1"&gt;#::1 localhost localhost.localdomain localhost6 localhost6.localdomain6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;4&lt;/span&gt; 16.187.191.150 SGDLITVM0905.hpeswlab.net SGDLITVM0905
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;5&lt;/span&gt; 127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="c1"&gt;#::1 localhost localhost.localdomain localhost6 localhost6.localdomain6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;7&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;8&lt;/span&gt; 16.187.191.150 SGDLITVM0905.hpeswlab.net SGDLITVM0905
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# head -5 /etc/passwd | awk &amp;#39;BEGIN{FS=&amp;#34;:&amp;#34;}{print NF}&amp;#39; # NF 输出字段数量&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;7&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;7&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;7&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;7&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;7&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;You have new mail in /var/spool/mail/root
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# head -5 /etc/passwd | awk &amp;#39;BEGIN{FS=&amp;#34;:&amp;#34;}{print $NF}&amp;#39; # $NF 就可以获取到最后一个字段的内容&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;/sbin/nologin
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;/sbin/nologin
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;/sbin/nologin
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;/sbin/nologin&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;关系操作符：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;=&lt;/code&gt; &lt;code&gt;&amp;gt;=&lt;/code&gt; &lt;code&gt;==&lt;/code&gt; &lt;code&gt;!=&lt;/code&gt; &lt;code&gt;~&lt;/code&gt; &lt;code&gt;!~&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;布尔操作符：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; &lt;code&gt;||&lt;/code&gt; &lt;code&gt;!&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;条件语句：&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;表达式&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; awk 语句1
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; awk 语句2
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;多个语句可以使用 &lt;code&gt;{}&lt;/code&gt; 括起来。&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# cat score.txt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user1 &lt;span class="m"&gt;60&lt;/span&gt; &lt;span class="m"&gt;61&lt;/span&gt; &lt;span class="m"&gt;62&lt;/span&gt; &lt;span class="m"&gt;63&lt;/span&gt; &lt;span class="m"&gt;64&lt;/span&gt; &lt;span class="m"&gt;65&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user2 &lt;span class="m"&gt;70&lt;/span&gt; &lt;span class="m"&gt;71&lt;/span&gt; &lt;span class="m"&gt;72&lt;/span&gt; &lt;span class="m"&gt;73&lt;/span&gt; &lt;span class="m"&gt;74&lt;/span&gt; &lt;span class="m"&gt;75&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user3 &lt;span class="m"&gt;80&lt;/span&gt; &lt;span class="m"&gt;81&lt;/span&gt; &lt;span class="m"&gt;82&lt;/span&gt; &lt;span class="m"&gt;83&lt;/span&gt; &lt;span class="m"&gt;84&lt;/span&gt; &lt;span class="m"&gt;85&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user4 &lt;span class="m"&gt;90&lt;/span&gt; &lt;span class="m"&gt;91&lt;/span&gt; &lt;span class="m"&gt;92&lt;/span&gt; &lt;span class="m"&gt;93&lt;/span&gt; &lt;span class="m"&gt;94&lt;/span&gt; &lt;span class="m"&gt;95&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# awk &amp;#39;{if($2&amp;gt;=80) print $1}&amp;#39; score.txt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user3
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user4
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# awk &amp;#39;{if($2&amp;gt;=80) print $1; print $2}&amp;#39; score.txt # 这种写法会把所有的第二个字段输出&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;60&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;70&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user3
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;80&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user4
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;90&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# awk &amp;#39;{if($2&amp;gt;=80) {print $1; print $2} }&amp;#39; score.txt # 如果想一起输出要加上 {} ，多个语句一起执行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;60&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;70&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user3
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;80&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user4
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;90&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;while&lt;/code&gt; 循环：&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;表达式&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; awk 语句1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;do&lt;/code&gt; 循环：&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; awk 语句1
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;表达式&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;for&lt;/code&gt; 循环：&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;初始值&lt;span class="p"&gt;;&lt;/span&gt;判断条件&lt;span class="p"&gt;;&lt;/span&gt;累加&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; awk 语句1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;可以使用 &lt;code&gt;break&lt;/code&gt; 和 &lt;code&gt;continue&lt;/code&gt;。&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# cat score.txt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user1 &lt;span class="m"&gt;60&lt;/span&gt; &lt;span class="m"&gt;61&lt;/span&gt; &lt;span class="m"&gt;62&lt;/span&gt; &lt;span class="m"&gt;63&lt;/span&gt; &lt;span class="m"&gt;64&lt;/span&gt; &lt;span class="m"&gt;65&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user2 &lt;span class="m"&gt;70&lt;/span&gt; &lt;span class="m"&gt;71&lt;/span&gt; &lt;span class="m"&gt;72&lt;/span&gt; &lt;span class="m"&gt;73&lt;/span&gt; &lt;span class="m"&gt;74&lt;/span&gt; &lt;span class="m"&gt;75&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user3 &lt;span class="m"&gt;80&lt;/span&gt; &lt;span class="m"&gt;81&lt;/span&gt; &lt;span class="m"&gt;82&lt;/span&gt; &lt;span class="m"&gt;83&lt;/span&gt; &lt;span class="m"&gt;84&lt;/span&gt; &lt;span class="m"&gt;85&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user4 &lt;span class="m"&gt;90&lt;/span&gt; &lt;span class="m"&gt;91&lt;/span&gt; &lt;span class="m"&gt;92&lt;/span&gt; &lt;span class="m"&gt;93&lt;/span&gt; &lt;span class="m"&gt;94&lt;/span&gt; &lt;span class="m"&gt;95&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# head -1 score.txt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user1 &lt;span class="m"&gt;60&lt;/span&gt; &lt;span class="m"&gt;61&lt;/span&gt; &lt;span class="m"&gt;62&lt;/span&gt; &lt;span class="m"&gt;63&lt;/span&gt; &lt;span class="m"&gt;64&lt;/span&gt; &lt;span class="m"&gt;65&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# head -1 score.txt | awk &amp;#39;for(c=2;c&amp;lt;=NF;c++) print c&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;7&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# head -1 score.txt | awk &amp;#39;for(c=2;c&amp;lt;=NF;c++) print $c&amp;#39; # 输出值&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;61&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;62&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;63&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;65&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# head -1 score.txt | awk &amp;#39;for(c=2;c&amp;lt;=NF;c++) print $c&amp;#39; # 输出值&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;61&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;62&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;63&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;65&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;数组：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;数组[下标] = 值&lt;/code&gt;，初始化数组。下标可以是数字，也可以是字符串。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;for (变量 in 数组)&lt;/code&gt;，&lt;code&gt;数组[变量]&lt;/code&gt; 获取数组元素&lt;/li&gt;
&lt;li&gt;&lt;code&gt;delete 数组[下标]&lt;/code&gt; 删除数组元素&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# cat score.txt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user1 &lt;span class="m"&gt;60&lt;/span&gt; &lt;span class="m"&gt;61&lt;/span&gt; &lt;span class="m"&gt;62&lt;/span&gt; &lt;span class="m"&gt;63&lt;/span&gt; &lt;span class="m"&gt;64&lt;/span&gt; &lt;span class="m"&gt;65&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user2 &lt;span class="m"&gt;70&lt;/span&gt; &lt;span class="m"&gt;71&lt;/span&gt; &lt;span class="m"&gt;72&lt;/span&gt; &lt;span class="m"&gt;73&lt;/span&gt; &lt;span class="m"&gt;74&lt;/span&gt; &lt;span class="m"&gt;75&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user3 &lt;span class="m"&gt;80&lt;/span&gt; &lt;span class="m"&gt;81&lt;/span&gt; &lt;span class="m"&gt;82&lt;/span&gt; &lt;span class="m"&gt;83&lt;/span&gt; &lt;span class="m"&gt;84&lt;/span&gt; &lt;span class="m"&gt;85&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user4 &lt;span class="m"&gt;90&lt;/span&gt; &lt;span class="m"&gt;91&lt;/span&gt; &lt;span class="m"&gt;92&lt;/span&gt; &lt;span class="m"&gt;93&lt;/span&gt; &lt;span class="m"&gt;94&lt;/span&gt; &lt;span class="m"&gt;95&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# awk &amp;#39;{ sum=0; for(column=2;column&amp;lt;=NF;column++) sum+=$column; print sum }&amp;#39; score.txt # 计算每个人的总分&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;375&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;435&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;495&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;555&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# [root@SGDLITVM0905 ~]# awk &amp;#39;{ sum=0; for(column=2;column&amp;lt;=NF;column++) sum+=$column; avg[$1]=sum/(NF-1); }END{ for( user in avg) print user, avg[user]}&amp;#39; score.txt # 计算每个人的平均分 并在 END 例程中格式化输出&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user1 62.5
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user2 72.5
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user3 82.5
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user4 92.5&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;awk 脚本可以保存到文件：&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# awk -f avg.awk score.txt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user1 62.5
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user2 72.5
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user3 82.5
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user4 92.5&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt; 加载 awk 文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;avg.awk&lt;/code&gt; 文件的内容：&lt;code&gt;{ sum=0; for(column=2;column&amp;lt;=NF;column++) sum+=$column; avg[$1]=sum/(NF-1); }END{ for( user in avg) print user, avg[user]}&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;命令行参数数组：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ARGC&lt;/code&gt; 命令行参数数组的长度&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ARGV&lt;/code&gt; 命令行参数数组&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# cat arg.awk&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;BEGIN&lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0&lt;span class="p"&gt;;&lt;/span&gt;x&amp;lt;ARGC&lt;span class="p"&gt;;&lt;/span&gt;x++&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; print ARGV&lt;span class="o"&gt;[&lt;/span&gt;x&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; print ARGC
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# awk -f arg.awk&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;awk
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# awk -f arg.awk 11 22 33&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;awk
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;11&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;22&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;33&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;ARGV[0]&lt;/code&gt; 就是命令本身。&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# cat avg.awk&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nv"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 2&lt;span class="p"&gt;;&lt;/span&gt; c &amp;lt;&lt;span class="o"&gt;=&lt;/span&gt; NF&lt;span class="p"&gt;;&lt;/span&gt; c++ &lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nv"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nv"&gt;$c&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; avg&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; sum / &lt;span class="o"&gt;(&lt;/span&gt; NF-1 &lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; print &lt;span class="nv"&gt;$1&lt;/span&gt;, avg&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;END&lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt; usr in avg&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nv"&gt;sum_all&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; avg&lt;span class="o"&gt;[&lt;/span&gt;user&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nv"&gt;avg_all&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; sum_all / NR
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt; user in avg &lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt; avg&lt;span class="o"&gt;[&lt;/span&gt;user&lt;span class="o"&gt;]&lt;/span&gt; &amp;gt; avg_all &lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; above++
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; below++
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; print &lt;span class="s2"&gt;&amp;#34;above&amp;#34;&lt;/span&gt;, above
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; print &lt;span class="s2"&gt;&amp;#34;below&amp;#34;&lt;/span&gt;, below
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# awk -f avg.awk score.txt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user1 62.5
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user2 72.5
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user3 82.5
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user4 92.5
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;above &lt;span class="m"&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;below &lt;span class="m"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;awk 函数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;算数函数
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sin()&lt;/code&gt; &lt;code&gt;cos()&lt;/code&gt; &lt;code&gt;int()&lt;/code&gt; &lt;code&gt;rand()&lt;/code&gt; &lt;code&gt;srand()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;字符串函数
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;toupper(s)&lt;/code&gt; &lt;code&gt;tolower(s)&lt;/code&gt; &lt;code&gt;length(s)&lt;/code&gt; &lt;code&gt;split(s,a,sep)&lt;/code&gt; &lt;code&gt;match(s,r)&lt;/code&gt; &lt;code&gt;substr(s,p,n)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;自定义函数，自定义函数一定要写在 &lt;code&gt;BEGIN&lt;/code&gt; 主循环 &lt;code&gt;END&lt;/code&gt; 例程的外面&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;function&lt;/span&gt; 函数名 &lt;span class="o"&gt;(&lt;/span&gt; 参数 &lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; awk 语句
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;return&lt;/span&gt; awk 变量
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# awk &amp;#39;BEGIN{pi=3.14; print int(pi)}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# awk &amp;#39;BEGIN{print rand()}&amp;#39; # 这是一个伪随机数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;0.237788
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# awk &amp;#39;BEGIN{print rand()}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;0.237788
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# awk &amp;#39;BEGIN{print rand()}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;0.237788
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# awk &amp;#39;BEGIN{srand();print rand()}&amp;#39; # srand 会重新获取种子。范围是 0 ~ 1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;0.960391
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# awk &amp;#39;BEGIN{srand();print rand()}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;0.0422737
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# awk &amp;#39;BEGIN{srand();print rand()}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;0.555768
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# awk &amp;#39;function a() { return 0 } BEGIN{ print a()}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@SGDLITVM0905 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# awk &amp;#39;function double(str) { return str str } BEGIN{ print double(&amp;#34;hello&amp;#34;)}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;hellohello&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;</description></item><item><title>Provisioner</title><link>https://shipengqi.github.io/devops-learn/docs/terraform/provisioner/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/terraform/provisioner/</guid><description>
&lt;p&gt;某些基础设施对象需要在创建后执行特定的操作才能正式工作。&lt;/p&gt;
&lt;p&gt;像这样创建后执行的操作可以使用&lt;strong&gt;预置器&lt;/strong&gt;(Provisioner)。预置器是由 Terraform 所提供的另一组插件，每种预置器可以在资源对象创建后执行不同类型的操作。&lt;/p&gt;
&lt;h2&gt;cloud-init&lt;span class="hx:absolute hx:-mt-20" id="cloud-init"&gt;&lt;/span&gt;
&lt;a href="#cloud-init" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;不少公有云厂商的虚拟机都提供了 cloud-init 功能，可以让我们在虚拟机实例第一次启动时执行一段自定义的脚本来执行一些初始化操作。&lt;/p&gt;
&lt;p&gt;首先要指出的是，provisioner 的官方文档里明确指出，由于预置器内部的行为 Terraform 无法感知，无法将它执行的变更纳入到声明式的代码管理中，所以预置器应被作为最后的手段使用，那么也就是说，如果 cloud-init 能够满足我们的要求，那么我们应该优先使用 cloud-init。&lt;/p&gt;
&lt;h2&gt;user_data&lt;span class="hx:absolute hx:-mt-20" id="user_data"&gt;&lt;/span&gt;
&lt;a href="#user_data" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;user_data&lt;/code&gt; 执行的命令, Terraform 无法感知. 如果命令失败,不得不访问服务器,再进行调试.&lt;/p&gt;
&lt;h2&gt;user_data 和 provisioner 区别&lt;span class="hx:absolute hx:-mt-20" id="user_data-和-provisioner-区别"&gt;&lt;/span&gt;
&lt;a href="#user_data-%e5%92%8c-provisioner-%e5%8c%ba%e5%88%ab" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;user_data&lt;/code&gt;: 原理是在实例启动时,将 &lt;code&gt;user_data&lt;/code&gt; 中的内容写入到实例的 &lt;code&gt;/var/lib/cloud/instance/user-data.txt&lt;/code&gt; 文件中,并执行该文件中的内容.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;provisioner&lt;/code&gt;: 原理是在实例启动后, Terraform 通过 SSH 连接到实例,并执行 &lt;code&gt;provisioner&lt;/code&gt; 中的命令.&lt;/p&gt;
&lt;h3&gt;为什么不建议使用 provisioner&lt;span class="hx:absolute hx:-mt-20" id="为什么不建议使用-provisioner"&gt;&lt;/span&gt;
&lt;a href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e4%b8%8d%e5%bb%ba%e8%ae%ae%e4%bd%bf%e7%94%a8-provisioner" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;</description></item><item><title>查找文件</title><link>https://shipengqi.github.io/devops-learn/docs/linux/04_find/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/linux/04_find/</guid><description>
&lt;h2&gt;find&lt;span class="hx:absolute hx:-mt-20" id="find"&gt;&lt;/span&gt;
&lt;a href="#find" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;find 命令用来在指定目录下查找文件。&lt;code&gt;find &amp;lt;文件路径&amp;gt; &amp;lt;查找条件&amp;gt; [补充条件]&lt;/code&gt;。&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@pooky ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# find /etc -name pass* # 查找 /etc 目录下 pass 前缀的文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;/etc/pam.d/passwd
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;/etc/pam.d/password-auth-ac
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;/etc/pam.d/password-auth
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;/etc/openldap/certs/password
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;/etc/passwd
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;/etc/selinux/targeted/active/modules/100/passenger
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;/etc/passwd-
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@pooky ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# find /etc -regex .*wd$ # 使用正则 -regex&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;/etc/security/opasswd
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;/etc/pam.d/passwd
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;/etc/passwd
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@pooky ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# find /etc -type f -regex .*wd$&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;/etc/security/opasswd
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;/etc/pam.d/passwd
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;/etc/passwd&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;常用参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-name&lt;/code&gt;：按文件名查找&lt;/strong&gt;（区分大小写）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-iname&lt;/code&gt;：按文件名查找（不区分大小写）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-type&lt;/code&gt;：按文件类型查找。&lt;code&gt;find /var -type d -name &amp;quot;log&amp;quot;&lt;/code&gt; 在 &lt;code&gt;/var&lt;/code&gt; 下查找所有名为 &lt;code&gt;log&lt;/code&gt; 的目录。
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;f&lt;/code&gt;：普通文件 (file)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;d&lt;/code&gt;：目录 (directory)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;l&lt;/code&gt;：符号链接 (link)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-mtime&lt;/code&gt;：按文件内容修改时间查找（天为单位）&lt;/strong&gt;，&lt;code&gt;find /var/log -name &amp;quot;*.log&amp;quot; -mtime -1&lt;/code&gt;，查找 &lt;code&gt;/var/log&lt;/code&gt; 下昨天到现在修改过的日志文件。
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-mtime +n&lt;/code&gt;：n 天之前被修改过的文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-mtime -n&lt;/code&gt;：n 天之内被修改过的文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-mtime n&lt;/code&gt;：正好 n 天前被修改过的文件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-mmin&lt;/code&gt;：按文件内容修改时间查找（分钟为单位），&lt;code&gt;find /tmp -cmin -10&lt;/code&gt; 查找 /tmp 下 10 分钟之内内容被修改过的文件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-atime/-amin&lt;/code&gt;：按文件访问时间查找（天/分钟）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ctime/-cmin&lt;/code&gt;：按文件状态改变时间查找（如权限、属主）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-size&lt;/code&gt;：按文件大小查找&lt;/strong&gt;，&lt;code&gt;find / -type f -size +100M&lt;/code&gt; 在整个系统查找大于 100MB 的文件（常用于定位磁盘空间杀手）
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-size +n&lt;/code&gt;：大于 n 个指定单位的文件 &lt;code&gt;find /var/log -name &amp;quot;*.log&amp;quot; -size +1G&lt;/code&gt; 查找超过 1G 的巨大日志文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-size -n&lt;/code&gt;：小于 n 个指定单位的文件&lt;/li&gt;
&lt;li&gt;单位：c（字节），k（KB），M（MB），G（GB）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-perm&lt;/code&gt;：按文件权限查找
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-perm 644&lt;/code&gt;：查找权限正好是 644 的文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-perm -644&lt;/code&gt;：查找权限包含 644 的文件（如 755, 644 都匹配，因为都包含了 rw-r&amp;ndash;r&amp;ndash;）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-user&lt;/code&gt;：按文件属主查找，&lt;code&gt;find /home -user pooky&lt;/code&gt; 查找属于用户 pooky 的所有文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-group&lt;/code&gt;：按文件属组查找&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;逻辑操作符&lt;span class="hx:absolute hx:-mt-20" id="逻辑操作符"&gt;&lt;/span&gt;
&lt;a href="#%e9%80%bb%e8%be%91%e6%93%8d%e4%bd%9c%e7%ac%a6" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt; 或 &lt;code&gt;-and&lt;/code&gt;：与（默认操作符，可省略）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o&lt;/code&gt; 或 &lt;code&gt;-or&lt;/code&gt;：或&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!&lt;/code&gt; 或 &lt;code&gt;-not&lt;/code&gt;：非&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;()&lt;/code&gt;：组合条件&lt;/strong&gt;，提高优先级。&lt;strong&gt;括号需要被转义或引用&lt;/strong&gt;，如 &lt;code&gt;\( ... \)&lt;/code&gt; 或 &lt;code&gt;'( ... )'&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 查找所有 .txt 或 .md 文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;find . &lt;span class="se"&gt;\(&lt;/span&gt; -name &lt;span class="s2"&gt;&amp;#34;*.txt&amp;#34;&lt;/span&gt; -o -name &lt;span class="s2"&gt;&amp;#34;*.md&amp;#34;&lt;/span&gt; &lt;span class="se"&gt;\)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 查找所有不属于 root 用户的文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;find . ! -user root&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;执行操作&lt;span class="hx:absolute hx:-mt-20" id="执行操作"&gt;&lt;/span&gt;
&lt;a href="#%e6%89%a7%e8%a1%8c%e6%93%8d%e4%bd%9c" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-exec&lt;/code&gt;：对匹配的文件执行指定的命令。命令以 &lt;code&gt;;&lt;/code&gt; 结束，&lt;code&gt;{}&lt;/code&gt; 是查找结果的占位符。&lt;code&gt;;&lt;/code&gt; 需要转义。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ok&lt;/code&gt;：与 &lt;code&gt;-exec&lt;/code&gt; 类似，但在执行命令前会交互式地询问用户确认，更安全。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-delete&lt;/code&gt;：直接删除匹配的文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 查找并删除 /tmp 下所有 .tmp 文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;find /tmp -name &lt;span class="s2"&gt;&amp;#34;*.tmp&amp;#34;&lt;/span&gt; -exec rm -f &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;应用场景&lt;span class="hx:absolute hx:-mt-20" id="应用场景"&gt;&lt;/span&gt;
&lt;a href="#%e5%ba%94%e7%94%a8%e5%9c%ba%e6%99%af" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 清理 /tmp 下超过 7 天未访问的临时文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;find /tmp -type f -atime +7 -delete
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 清理 /var/log 下超过 30 天的日志文件（.log.gz 等压缩过的日志）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;find /var/log -name &lt;span class="s2"&gt;&amp;#34;*.log*&amp;#34;&lt;/span&gt; -mtime +30 -delete
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 查找当前目录下大于 500MB 的文件，并按大小排序&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;find . -type f -size +500M -exec ls -lh &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sort -k &lt;span class="m"&gt;5&lt;/span&gt; -hr
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 查找所有 .conf 配置文件，并用 tar 打包备份&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;find /etc -name &lt;span class="s2"&gt;&amp;#34;*.conf&amp;#34;&lt;/span&gt; -exec tar -rvf backup.tar &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 将某个用户（如nginx）创建的所有文件属主改为 www-data&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;find /srv/www -user nginx -exec chown www-data:www-data &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 批量修改目录权限为 755，文件权限为 644&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;find /path/to/dir -type d -exec chmod &lt;span class="m"&gt;755&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;find /path/to/dir -type f -exec chmod &lt;span class="m"&gt;644&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 统计当前目录下 JavaScript 文件的数量&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;find . -name &lt;span class="s2"&gt;&amp;#34;*.js&amp;#34;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; wc -l
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 忽略错误输出：在搜索根目录 / 时，会遇到大量权限拒绝的错误，干扰查看结果。可以将错误重定向到黑洞。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;find / -name &lt;span class="s2"&gt;&amp;#34;something&amp;#34;&lt;/span&gt; 2&amp;gt;/dev/null&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="hx:overflow-x-auto hx:mt-6 hx:flex hx:rounded-lg hx:border hx:py-2 hx:ltr:pr-4 hx:rtl:pl-4 hx:contrast-more:border-current hx:contrast-more:dark:border-current hx:border-blue-200 hx:bg-blue-100 hx:text-blue-900 hx:dark:border-blue-200/30 hx:dark:bg-blue-900/30 hx:dark:text-blue-200"&gt;
&lt;div class="hx:ltr:pl-3 hx:ltr:pr-2 hx:rtl:pr-3 hx:rtl:pl-2"&gt;&lt;svg height=1.2em class="hx:inline-block hx:align-middle" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true"&gt;&lt;path stroke-linecap="round" stroke-linejoin="round" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/&gt;&lt;/svg&gt;&lt;/div&gt;
&lt;div class="hx:w-full hx:min-w-0 hx:leading-7"&gt;
&lt;div class="hx:mt-6 hx:leading-7 hx:first:mt-0"&gt;&lt;strong&gt;先确认，再操作&lt;/strong&gt;：在使用 &lt;code&gt;-exec&lt;/code&gt;、&lt;code&gt;-delete&lt;/code&gt; 等具有破坏性的参数前，先用 &lt;code&gt;-print&lt;/code&gt; 或 &lt;code&gt;-ls&lt;/code&gt; 模拟运行一次，确认找到的文件是你要操作的目标。&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;which&lt;span class="hx:absolute hx:-mt-20" id="which"&gt;&lt;/span&gt;
&lt;a href="#which" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;在用户的 PATH 环境变量所指定的目录列表中，搜索某个可执行命令的完整路径&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;which&lt;/code&gt; 只找能直接运行的命令。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt; 显示所有匹配的可执行文件路径，而不仅仅是第一个。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 &lt;code&gt;which&lt;/code&gt; 检查一下，如果没输出，说明该命令确实不在 PATH 中。&lt;/p&gt;
&lt;h2&gt;whereis&lt;span class="hx:absolute hx:-mt-20" id="whereis"&gt;&lt;/span&gt;
&lt;a href="#whereis" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;在一个标准的 Linux 系统目录列表（如 &lt;code&gt;/bin&lt;/code&gt;, &lt;code&gt;/usr/bin&lt;/code&gt;, &lt;code&gt;/usr/local/bin&lt;/code&gt;, &lt;code&gt;/usr/share/man&lt;/code&gt; 等）中搜索某个命令的二进制文件（可执行文件）、源代码文件和 man 帮助手册文件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-b&lt;/code&gt; 只搜索二进制（可执行）文件。 &lt;code&gt;whereis -b nginx&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m&lt;/code&gt; 只搜索手册页文件。&lt;code&gt;whereis -m ls&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt; 只搜索源代码文件。&lt;code&gt;whereis -s bash&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>网络性能优化</title><link>https://shipengqi.github.io/devops-learn/docs/linux/perf/04_net/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/linux/perf/04_net/</guid><description/></item><item><title>CPU</title><link>https://shipengqi.github.io/devops-learn/docs/linux/05_cpu/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/linux/05_cpu/</guid><description>
&lt;h2&gt;进程管理&lt;span class="hx:absolute hx:-mt-20" id="进程管理"&gt;&lt;/span&gt;
&lt;a href="#%e8%bf%9b%e7%a8%8b%e7%ae%a1%e7%90%86" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ps&lt;/code&gt;：拍一张静态照片，用于详细分析、查找和记录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;top&lt;/code&gt;：打开实时直播，用于动态监控和即时操作。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pstree&lt;/code&gt;：画一张家谱/关系图，用于理解进程间的依赖和层次关系。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;ps&lt;span class="hx:absolute hx:-mt-20" id="ps"&gt;&lt;/span&gt;
&lt;a href="#ps" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;查看进程状态快照。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ps aux&lt;/code&gt;：(&lt;strong&gt;最常用&lt;/strong&gt;) 显示&lt;strong&gt;所有用户的所有进程&lt;/strong&gt;的详细信息。相比较 &lt;code&gt;ps -ef&lt;/code&gt; 多了两列 &lt;code&gt;%CPU&lt;/code&gt; 和 &lt;code&gt;%MEM&lt;/code&gt;，少了一列 &lt;code&gt;PPID&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ps -ef&lt;/code&gt;：显示所有进程的完整格式信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ps -eF&lt;/code&gt;：显示所有进程的更详细的完整格式信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ps -eo&lt;/code&gt;：自定义输出列。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ps -eLf&lt;/code&gt;：显示线程。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 查找 nginx 或 java 进程&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ps aux &lt;span class="p"&gt;|&lt;/span&gt; grep nginx
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ps aux &lt;span class="p"&gt;|&lt;/span&gt; grep java
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 按 CPU 使用率降序排列&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# sort 参数可能有些系统不支持，sort 命令功能更丰富&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ps aux --sort&lt;span class="o"&gt;=&lt;/span&gt;-%cpu &lt;span class="p"&gt;|&lt;/span&gt; head -10
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 按内存使用率降序排列&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ps aux --sort&lt;span class="o"&gt;=&lt;/span&gt;-%mem &lt;span class="p"&gt;|&lt;/span&gt; head -10
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 查看进程的父进程 ID （PPID）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ps -eo pid,ppid,cmd &lt;span class="p"&gt;|&lt;/span&gt; grep &amp;lt;进程名&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 检查僵尸进程&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ps aux &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;$8==&amp;#34;Z&amp;#34; {print $0}&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;pstree&lt;span class="hx:absolute hx:-mt-20" id="pstree"&gt;&lt;/span&gt;
&lt;a href="#pstree" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;以树状结构显示进程之间的父子关系。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;，&lt;code&gt;--pid&lt;/code&gt; (最常用) 显示进程ID（PID）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt;，&lt;code&gt;--arguments&lt;/code&gt; 显示命令行参数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt;，&lt;code&gt;--user&lt;/code&gt; 显示用户信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-H&lt;/code&gt;，&lt;code&gt;--highlight&lt;/code&gt; 高亮显示指定进程及其祖先。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用场景：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;直观查看系统的进程层次结构&lt;/li&gt;
&lt;li&gt;排查“杀不掉的进程”
&lt;ul&gt;
&lt;li&gt;如果一个进程反复被拉起，用 pstree 可以清晰地看到它的父进程是谁，从而找到根源并处理父进程。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;分析由守护进程（如 systemd, supervisord）管理的服务查看服务的所有子进程是否正常启动。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;top&lt;span class="hx:absolute hx:-mt-20" id="top"&gt;&lt;/span&gt;
&lt;a href="#top" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;top 显示进程和系统信息。其实和 ps 差不多，只不过显示的是实时数据。它是交互式的。&lt;/p&gt;
&lt;p&gt;常用交互指令:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;P&lt;/code&gt; (大写) 按 CPU 使用率排序&lt;/li&gt;
&lt;li&gt;&lt;code&gt;M&lt;/code&gt; (大写) 按 内存使用率（RES） 排序&lt;/li&gt;
&lt;li&gt;&lt;code&gt;N&lt;/code&gt; (大写) 按 PID 排序&lt;/li&gt;
&lt;li&gt;&lt;code&gt;T&lt;/code&gt; (大写) 按 CPU 时间（TIME+） 排序&lt;/li&gt;
&lt;li&gt;&lt;code&gt;k&lt;/code&gt; 终止一个进程（会提示输入PID）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;r&lt;/code&gt; renice（修改进程优先级）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1&lt;/code&gt; 展开显示所有CPU核心的详细使用情况&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;top 命令进程的几种状态：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;R&lt;/code&gt; 运行（正在运行或等待运行）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;S&lt;/code&gt; 中断（睡眠）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;D&lt;/code&gt; 不可中断（等待 IO）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Z&lt;/code&gt; 僵尸（已终止，但父进程未回收）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;T&lt;/code&gt; 停止（已停止）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;N&lt;/code&gt; 不可见（没有显示）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;三者的协同工作流&lt;span class="hx:absolute hx:-mt-20" id="三者的协同工作流"&gt;&lt;/span&gt;
&lt;a href="#%e4%b8%89%e8%80%85%e7%9a%84%e5%8d%8f%e5%90%8c%e5%b7%a5%e4%bd%9c%e6%b5%81" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;top&lt;/code&gt;：发现问题。发现系统负载很高，CPU &lt;code&gt;%wa&lt;/code&gt;（等待 IO）指标飙升。&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;top&lt;/code&gt; 中按 &lt;code&gt;M&lt;/code&gt;：初步定位。发现没有进程占用特别高的内存或CPU。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ps aux&lt;/code&gt;：深入分析。结合 &lt;code&gt;grep&lt;/code&gt; 和状态过滤，寻找处于 &lt;code&gt;D&lt;/code&gt;（不可中断睡眠）状态的进程，这通常是导致高 IO 等待的根源
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ps aux | awk '$8==&amp;quot;D&amp;quot; {print $0}'&lt;/code&gt;， 查找 &lt;code&gt;D&lt;/code&gt; 状态的进程&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pstree -p&lt;/code&gt;：追溯根源。如果找到问题进程，用 pstree 查看是谁启动了它，判断影响范围，决定是终止子进程还是父进程。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kill -9 &amp;lt;PID&amp;gt;&lt;/code&gt;：强制终止进程。如果终止后问题没有解决，可能需要重启系统。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;top&lt;/code&gt;：再次检查。确认问题是否解决。&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>内存</title><link>https://shipengqi.github.io/devops-learn/docs/linux/06_mem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/linux/06_mem/</guid><description/></item><item><title>Resource 资源</title><link>https://shipengqi.github.io/devops-learn/docs/terraform/07_resource/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/terraform/07_resource/</guid><description>
&lt;h2&gt;元参数&lt;span class="hx:absolute hx:-mt-20" id="元参数"&gt;&lt;/span&gt;
&lt;a href="#%e5%85%83%e5%8f%82%e6%95%b0" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;</description></item><item><title>磁盘</title><link>https://shipengqi.github.io/devops-learn/docs/linux/07_disk/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/linux/07_disk/</guid><description/></item><item><title>网络</title><link>https://shipengqi.github.io/devops-learn/docs/linux/08_net/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/linux/08_net/</guid><description>
&lt;p&gt;net-tools 是 CentOS 7 之前的版本使用的网络管理工具，而 iproute2 是 CentOS 7 之后主推的网络管理工具。&lt;/p&gt;
&lt;p&gt;net-tools 包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ifconfig 网卡配置&lt;/li&gt;
&lt;li&gt;route 网关配置&lt;/li&gt;
&lt;li&gt;netstat 查看网络状态&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;iproute2 包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ip：包含里 ifconfig 和 route 的功能&lt;/li&gt;
&lt;li&gt;ss：类似 netstat ，更快更强&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;ip 命令&lt;span class="hx:absolute hx:-mt-20" id="ip-命令"&gt;&lt;/span&gt;
&lt;a href="#ip-%e5%91%bd%e4%bb%a4" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;ip addr 命令&lt;span class="hx:absolute hx:-mt-20" id="ip-addr-命令"&gt;&lt;/span&gt;
&lt;a href="#ip-addr-%e5%91%bd%e4%bb%a4" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;ip addr 命令用于查看和管理网络接口的 IP 地址。&lt;/p&gt;
&lt;h3&gt;ip route 命令&lt;span class="hx:absolute hx:-mt-20" id="ip-route-命令"&gt;&lt;/span&gt;
&lt;a href="#ip-route-%e5%91%bd%e4%bb%a4" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;ip route&lt;/code&gt; 命令它不仅仅是用来“查看路由表”，更是操作 Linux 内核路由表的核心工具。&lt;/p&gt;
&lt;h4&gt;什么是路由？&lt;span class="hx:absolute hx:-mt-20" id="什么是路由"&gt;&lt;/span&gt;
&lt;a href="#%e4%bb%80%e4%b9%88%e6%98%af%e8%b7%af%e7%94%b1" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;它是一套&lt;strong&gt;双向&lt;/strong&gt;规则，既扮演着“迎宾员”的角色，决定如何接收外来数据包；也扮演着“导航员”的角色，决定如何发送外出数据包。&lt;/p&gt;
&lt;h4&gt;ip route 命令的角色&lt;span class="hx:absolute hx:-mt-20" id="ip-route-命令的角色"&gt;&lt;/span&gt;
&lt;a href="#ip-route-%e5%91%bd%e4%bb%a4%e7%9a%84%e8%a7%92%e8%89%b2" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;ip route 是 iproute2 软件套件的一部分，用于查看和管理内核中的路由表（Routing Table）。它的工作原理可以理解为&lt;strong&gt;用户空间与内核空间之间的一个桥梁&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用户输入命令：例如 &lt;code&gt;ip route add 192.168.2.0/24 via 192.168.1.1&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;内核系统调用&lt;/strong&gt;：通过 Netlink 套接字（一种专门用于内核与用户进程通信的机制）将“添加路由”的请求发送给 Linux 内核。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;内核处理请求&lt;/strong&gt;：内核网络栈接收到请求后，会根据请求参数（如目标网络、下一跳地址等）进行解析和处理。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;内核修改路由表&lt;/strong&gt;：内核网络栈接收到请求后，在其内部的路由表中创建、删除或修改相应的路由条目。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;生效&lt;/strong&gt;：此后，所有进出主机的数据包转发决策都将依据新的路由表进行。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;路由表的结构与查看&lt;span class="hx:absolute hx:-mt-20" id="路由表的结构与查看"&gt;&lt;/span&gt;
&lt;a href="#%e8%b7%af%e7%94%b1%e8%a1%a8%e7%9a%84%e7%bb%93%e6%9e%84%e4%b8%8e%e6%9f%a5%e7%9c%8b" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;直接输入 &lt;code&gt;ip route show&lt;/code&gt;（或简写为 &lt;code&gt;ip r&lt;/code&gt;）可以查看当前的路由表。它的结构由一系列路由条目组成，每个条目包含以下几个关键部分：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;部分&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;th&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;目标网络 (Destination)&lt;/td&gt;
&lt;td&gt;数据包要去的IP网段&lt;/td&gt;
&lt;td&gt;192.168.1.0/24&lt;/td&gt;
&lt;td&gt;这条规则适用于去往 192.168.1.x 的所有包&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;via (网关/Gateway)&lt;/td&gt;
&lt;td&gt;下一跳路由器的IP地址&lt;/td&gt;
&lt;td&gt;via 192.168.0.1&lt;/td&gt;
&lt;td&gt;把数据包发给这个地址（路由器）去处理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dev (接口/Device)&lt;/td&gt;
&lt;td&gt;数据包应该从哪个网络接口发出&lt;/td&gt;
&lt;td&gt;dev eth0&lt;/td&gt;
&lt;td&gt;数据包从 eth0 网卡发出&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;proto (协议/Protocol)&lt;/td&gt;
&lt;td&gt;此路由条目的来源&lt;/td&gt;
&lt;td&gt;proto kernel&lt;/td&gt;
&lt;td&gt;由内核自动生成（直连路由）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;scope (作用域)&lt;/td&gt;
&lt;td&gt;路由的有效范围&lt;/td&gt;
&lt;td&gt;scope link&lt;/td&gt;
&lt;td&gt;仅适用于直连链路&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;metric (度量值)&lt;/td&gt;
&lt;td&gt;路由的优先级（成本）&lt;/td&gt;
&lt;td&gt;metric 100&lt;/td&gt;
&lt;td&gt;值越小，优先级越高&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;code&gt;ip route show&lt;/code&gt; 示例：&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;default via 192.168.0.1 dev eth0 proto dhcp metric &lt;span class="m"&gt;100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;192.168.0.0/24 dev eth0 proto kernel scope link src 192.168.0.100 metric &lt;span class="m"&gt;100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;local&lt;/span&gt; 192.168.0.100 dev eth0 proto kernel scope host src 192.168.0.100&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;默认路由 (Default Route)&lt;/strong&gt;：&lt;code&gt;default via 192.168.0.1 dev eth0 proto dhcp metric 100&lt;/code&gt;。
&lt;ul&gt;
&lt;li&gt;所有发往非本机、非直连网络的数据包（即不知道往哪扔的包），都通过 &lt;code&gt;eth0&lt;/code&gt; 网卡发给网关 &lt;code&gt;192.168.0.1&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;default&lt;/code&gt; 是 &lt;code&gt;0.0.0.0/0&lt;/code&gt; 的简写&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;proto dhcp&lt;/code&gt; 表示这个路由是通过 DHCP 动态获取的。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;metric 100&lt;/code&gt; 表示这个路由的优先级是 100，数值越小，优先级越高。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;直连路由 (Direct Route)&lt;/strong&gt;：&lt;code&gt;192.168.0.0/24 dev eth0 proto kernel scope link src 192.168.0.100 metric 100&lt;/code&gt;。
&lt;ul&gt;
&lt;li&gt;发往 &lt;code&gt;192.168.0.0/24&lt;/code&gt; 这个网段的数据包，直接通过 &lt;code&gt;eth0&lt;/code&gt; 网卡发出，不需要网关。&lt;code&gt;src&lt;/code&gt; 指明了从本机发出数据包时，默认使用的源 IP 地址。&lt;/li&gt;
&lt;li&gt;当你为网卡配置 IP 地址并启动时（如 &lt;code&gt;ip addr add 192.168.0.100/24 dev eth0&lt;/code&gt;），内核会自动生成对应的直连路由。&lt;/li&gt;
&lt;li&gt;意思就是，这个包是局域网内的包，不需要通过网关发送了，所以没有 &lt;code&gt;via&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;本地路由 (Local Route)&lt;/strong&gt;：&lt;code&gt;local 192.168.0.100 dev eth0 proto kernel scope host src 192.168.0.100&lt;/code&gt;。
&lt;ul&gt;
&lt;li&gt;这条路由通常不会在 &lt;code&gt;ip route show&lt;/code&gt; 中直接显示，需要使用 &lt;code&gt;ip route show table local&lt;/code&gt; 查看。它管理发往本机自身 IP 的数据包。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;local&lt;/code&gt;：关键字。明确标识这是一条本地路由，与普通路由的网段格式（如 &lt;code&gt;192.168.0.0/24&lt;/code&gt;）不同。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;192.168.0.100&lt;/code&gt;：目标地址。这就是本机配置的 IP 地址。它是一个精确的主机路由（&lt;code&gt;/32&lt;/code&gt;），而不是一个网段。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;scope host&lt;/code&gt;：作用域。这是最关键的部分&lt;/strong&gt;！&lt;code&gt;scope host&lt;/code&gt; 意味着这条路由&lt;strong&gt;仅在本机内部有效，绝不可能被转发到网络上去&lt;/strong&gt;。它划清了一条清晰的边界：这是“我自己”。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;dev lo：关联接口。这个 IP 地址被配置在 lo 接口上。&lt;/p&gt;
&lt;p&gt;proto kernel：协议。由内核自动生成。&lt;/p&gt;
&lt;p&gt;scope host：作用域。这是最关键的部分！scope host 意味着这条路由仅在本机内部有效，绝不可能被转发到网络上去。它划清了一条清晰的边界：这是“我自己”。&lt;/p&gt;
&lt;h4&gt;路由查询过程&lt;span class="hx:absolute hx:-mt-20" id="路由查询过程"&gt;&lt;/span&gt;
&lt;a href="#%e8%b7%af%e7%94%b1%e6%9f%a5%e8%af%a2%e8%bf%87%e7%a8%8b" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;当内核需要发送一个数据包时，是如何使用这张表的呢？这个过程称为&lt;strong&gt;路由查找&lt;/strong&gt; (Route Lookup)，它遵循&lt;strong&gt;最长前缀匹配 (Longest Prefix Match) 原则&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;数据包目标 IP&lt;/strong&gt;：例如 &lt;code&gt;192.168.0.150&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;查询路由表&lt;/strong&gt;：内核逐条比对路由条目中的“目标网络”。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;匹配&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;它会同时匹配 &lt;code&gt;192.168.0.0/24&lt;/code&gt; (24 位前缀) 和 &lt;code&gt;default / 0.0.0.0/0&lt;/code&gt; (0 位前缀)。&lt;/li&gt;
&lt;li&gt;根据最长前缀匹配原则，&lt;code&gt;/24&lt;/code&gt; 比 &lt;code&gt;/0&lt;/code&gt; 更具体、更长，因此优先级更高。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;执行&lt;/strong&gt;：内核选择 &lt;code&gt;192.168.0.0/24 dev eth0&lt;/code&gt; 这条路由，直接将数据包从 &lt;code&gt;eth0&lt;/code&gt; 接口发出，而无需经过网关。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;常用命令示例及其原理&lt;span class="hx:absolute hx:-mt-20" id="常用命令示例及其原理"&gt;&lt;/span&gt;
&lt;a href="#%e5%b8%b8%e7%94%a8%e5%91%bd%e4%bb%a4%e7%a4%ba%e4%be%8b%e5%8f%8a%e5%85%b6%e5%8e%9f%e7%90%86" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令示例&lt;/th&gt;
&lt;th&gt;工作原理&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ip route add default via 192.168.1.1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;添加默认路由。将所有未知流量导向网关 &lt;code&gt;192.168.1.1&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ip route add 10.1.0.0/16 via 192.168.1.2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;添加静态路由。将所有去往 &lt;code&gt;10.1.0.0/16&lt;/code&gt; 的流量交给下一跳路由器 &lt;code&gt;192.168.1.2&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ip route del 10.1.0.0/16&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;删除一条静态路由。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ip route replace default via 192.168.1.254&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;替换现有默认路由。将默认网关从之前的改为 &lt;code&gt;192.168.1.254&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ip route get 8.8.8.8&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;模拟路由查询，诊断“网络不通”问题。显示内核是如何路由到 &lt;code&gt;8.8.8.8&lt;/code&gt; 的，用于调试。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;ss 命令&lt;span class="hx:absolute hx:-mt-20" id="ss-命令"&gt;&lt;/span&gt;
&lt;a href="#ss-%e5%91%bd%e4%bb%a4" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;属于 iproute2 工具包，类似 netstat，参数类似，显示格式不同。&lt;/p&gt;
&lt;p&gt;两者的区别：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;性能：ss 直接从内核空间获取信息，速度极快。而 &lt;strong&gt;netstat 会遍历 &lt;code&gt;/proc/net&lt;/code&gt; 下的文件，在连接数非常多时（如数万）速度很慢&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;信息更丰富：ss 可以显示更多的 TCP 内部状态信息（如拥塞控制、内存使用等）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;格式为：&lt;code&gt;ss [选项] [过滤器]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt;：显示 TCP sockets。&lt;code&gt;ss -t&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt;：显示 UDP sockets。&lt;code&gt;ss -u&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;：显示正在监听（Listen）的 sockets。&lt;code&gt;ss -tl&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt;：显示所有 sockets（包括监听和非监听）。&lt;code&gt;ss -ta&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;：不解析服务名称（显示端口号而不是像“http”这样的名字）。强烈推荐始终使用，速度更快且信息更准确。&lt;code&gt;ss -tn&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;：显示使用 socket 的进程信息（需要 sudo）。&lt;code&gt;sudo ss -tp&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-4&lt;/code&gt;：仅显示 IPv4 sockets。&lt;code&gt;ss -t4&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-6&lt;/code&gt;：仅显示 IPv6 sockets。&lt;code&gt;ss -t6&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;过滤选项:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sport = :端口号&lt;/code&gt;：过滤源端口。&lt;code&gt;ss sport = :80&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dport = :端口号&lt;/code&gt;：过滤目标端口。&lt;code&gt;ss dport = :443&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src IP地址&lt;/code&gt;：过滤源 IP 地址。&lt;code&gt;ss src 192.168.1.100&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dst IP地址&lt;/code&gt;：过滤目标 IP 地址。&lt;code&gt;ss dst 8.8.8.8&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;state&lt;/code&gt;：过滤连接状态。&lt;code&gt;ss state established&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输出选项:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-e&lt;/code&gt;：显示详细的 socket 信息（如 UID、内存等）。&lt;code&gt;ss -te&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o&lt;/code&gt;：显示 TCP 计时器信息（如 TCP 重传超时）。&lt;code&gt;ss -to&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;：显示 TCP 内部信息（拥塞控制、流量控制）。&lt;code&gt;ss -ti&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m&lt;/code&gt;：显示 socket 的内存使用情况。&lt;code&gt;ss -tm&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt;：打印摘要统计信息（&lt;strong&gt;非常有用&lt;/strong&gt;）。&lt;code&gt;ss -s&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;使用场景&lt;span class="hx:absolute hx:-mt-20" id="使用场景"&gt;&lt;/span&gt;
&lt;a href="#%e4%bd%bf%e7%94%a8%e5%9c%ba%e6%99%af" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;用于检查哪些端口已开放并正在等待连接：&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo ss -tunlp
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# -t: TCP, -u: UDP, -n: 不解析, -l: 监听, -p: 显示进程&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 输出&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 一眼就能看出：Nginx（PID 1234）在监听 80 端口，SSH（PID 5678）在监听 22 端口&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Netid State Recv-Q Send-Q Local Address:Port Peer Address:Port
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;tcp LISTEN &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;128&lt;/span&gt; *:80 *:* users:&lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;nginx&amp;#34;&lt;/span&gt;,pid&lt;span class="o"&gt;=&lt;/span&gt;1234,fd&lt;span class="o"&gt;=&lt;/span&gt;6&lt;span class="o"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;tcp LISTEN &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;128&lt;/span&gt; *:22 *:* users:&lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;sshd&amp;#34;&lt;/span&gt;,pid&lt;span class="o"&gt;=&lt;/span&gt;5678,fd&lt;span class="o"&gt;=&lt;/span&gt;3&lt;span class="o"&gt;))&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 查看所有活跃的网络连接&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ss -tna &lt;span class="p"&gt;|&lt;/span&gt; grep ESTAB
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 或者更精确地，查看所有已建立连接&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ss -t state established&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;当服务器出现性能问题或怀疑连接数过多时：&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ss -s
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 输出列解读：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Total: &lt;span class="m"&gt;1234&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;kernel 0&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# TCP 行：可以快速了解当前连接状态分布（已建立、关闭、等待释放等）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;TCP: &lt;span class="m"&gt;1456&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;estab 234, closed 1100, orphaned 5, timewait 1100&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Transport Total IP IPv6
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;* &lt;span class="m"&gt;0&lt;/span&gt; - -
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;RAW &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;UDP &lt;span class="m"&gt;20&lt;/span&gt; &lt;span class="m"&gt;18&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;TCP &lt;span class="m"&gt;356&lt;/span&gt; &lt;span class="m"&gt;350&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;INET &lt;span class="m"&gt;377&lt;/span&gt; &lt;span class="m"&gt;368&lt;/span&gt; &lt;span class="m"&gt;9&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;FRAG &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;排查特定服务或端口的问题：&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 1. 查看谁在连接我的MySQL服务（3306端口）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ss -tn dst :3306
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 2. 查看我的Web服务器（80端口）正在与哪些客户端建立连接&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ss -tn src :80
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 3. 查看某个IP地址（如 192.168.1.15）与我的所有连接&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ss -tn dst 192.168.1.15
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 分析TCP连接内部状态&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 显示TCP连接的详细状态，包括计时器信息（重传超时等）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ss -tno
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 显示更详细的内部信息，包括拥塞窗口、往返时间等&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ss -tni&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;网络诊断&lt;span class="hx:absolute hx:-mt-20" id="网络诊断"&gt;&lt;/span&gt;
&lt;a href="#%e7%bd%91%e7%bb%9c%e8%af%8a%e6%96%ad" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;如何查看到目标主机的网络状态&lt;span class="hx:absolute hx:-mt-20" id="如何查看到目标主机的网络状态"&gt;&lt;/span&gt;
&lt;a href="#%e5%a6%82%e4%bd%95%e6%9f%a5%e7%9c%8b%e5%88%b0%e7%9b%ae%e6%a0%87%e4%b8%bb%e6%9c%ba%e7%9a%84%e7%bd%91%e7%bb%9c%e7%8a%b6%e6%80%81" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;使用 &lt;code&gt;ping &amp;lt;IP 或者 域名&amp;gt;&lt;/code&gt; 查看网络是否是通的。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;traceroute&lt;/code&gt; 和 &lt;code&gt;mtr&lt;/code&gt; 辅助 &lt;code&gt;ping&lt;/code&gt; 命令，在 &lt;code&gt;ping&lt;/code&gt; 通网络之后，如果网络通信还是有问题，
&lt;ul&gt;
&lt;li&gt;可以使用 &lt;code&gt;traceroute&lt;/code&gt; 可以查看网络中每一跳的网络质量。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mtr&lt;/code&gt; 可以检测网络中是否有丢包。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nslookup&lt;/code&gt; 查看域名对应的 IP。&lt;/li&gt;
&lt;li&gt;如果主机可以连接，但是服务仍然无法访问，使用 &lt;code&gt;telnet&lt;/code&gt; 检查端口状态。&lt;/li&gt;
&lt;li&gt;如果端口没有问题，仍然无法访问，可以使用 &lt;code&gt;tcpdump&lt;/code&gt; 进行抓包，更细致的查看网络问题。&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;netstat&lt;/code&gt; 和 &lt;code&gt;ss&lt;/code&gt;，查看服务范围。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;traceroute&lt;span class="hx:absolute hx:-mt-20" id="traceroute"&gt;&lt;/span&gt;
&lt;a href="#traceroute" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;traceroute -w 1 www.baidu.com&lt;/code&gt;，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-w&lt;/code&gt; 等待响应的超时时间，单位为秒，&lt;code&gt;-w 1&lt;/code&gt; 表示某个 IP 超时的最大等待时间为 1 秒。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt; 显示 IP 地址&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m&lt;/code&gt; 设置最大跳数，默认 64。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-q&lt;/code&gt; 每个网关发送数据包个数，默认 3。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt; 指定使用的目标端口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-I&lt;/code&gt;，&lt;code&gt;--icmp&lt;/code&gt; 使用 ICMP ECHO 作为探测包。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-M&lt;/code&gt;，&lt;code&gt;--type=Method&lt;/code&gt; 指定使用的探测方法（&lt;code&gt;icmp&lt;/code&gt; 或者 &lt;code&gt;udp&lt;/code&gt;），默认 &lt;code&gt;udp&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@shcCDFrh75vm8 ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# traceroute -w 1 www.baidu.com&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;traceroute to www.baidu.com &lt;span class="o"&gt;(&lt;/span&gt;104.193.88.77&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="m"&gt;30&lt;/span&gt; hops max, &lt;span class="m"&gt;60&lt;/span&gt; byte packets
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="m"&gt;1&lt;/span&gt; gateway &lt;span class="o"&gt;(&lt;/span&gt;16.155.192.1&lt;span class="o"&gt;)&lt;/span&gt; 0.525 ms 0.635 ms 0.800 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="m"&gt;2&lt;/span&gt; 10.132.24.193 &lt;span class="o"&gt;(&lt;/span&gt;10.132.24.193&lt;span class="o"&gt;)&lt;/span&gt; 0.600 ms 0.930 ms 1.137 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="m"&gt;3&lt;/span&gt; 192.168.201.122 &lt;span class="o"&gt;(&lt;/span&gt;192.168.201.122&lt;span class="o"&gt;)&lt;/span&gt; 0.826 ms 0.746 ms 0.674 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="m"&gt;4&lt;/span&gt; 192.168.200.45 &lt;span class="o"&gt;(&lt;/span&gt;192.168.200.45&lt;span class="o"&gt;)&lt;/span&gt; 2.045 ms 1.978 ms 1.962 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="m"&gt;5&lt;/span&gt; 192.168.203.249 &lt;span class="o"&gt;(&lt;/span&gt;192.168.203.249&lt;span class="o"&gt;)&lt;/span&gt; 29.375 ms 29.351 ms 29.275 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="m"&gt;6&lt;/span&gt; 192.168.203.250 &lt;span class="o"&gt;(&lt;/span&gt;192.168.203.250&lt;span class="o"&gt;)&lt;/span&gt; 3.892 ms 2.980 ms 2.907 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="m"&gt;7&lt;/span&gt; 192.168.200.185 &lt;span class="o"&gt;(&lt;/span&gt;192.168.200.185&lt;span class="o"&gt;)&lt;/span&gt; 68.675 ms 68.636 ms 68.691 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="m"&gt;8&lt;/span&gt; 192.168.200.186 &lt;span class="o"&gt;(&lt;/span&gt;192.168.200.186&lt;span class="o"&gt;)&lt;/span&gt; 70.094 ms 70.356 ms 69.995 ms
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="m"&gt;9&lt;/span&gt; * * *
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;10&lt;/span&gt; * * * &lt;span class="c1"&gt;# * 表示不支持 traceroute 追踪。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;11&lt;/span&gt; * * *
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;12&lt;/span&gt; * * *
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;13&lt;/span&gt; * * *
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;14&lt;/span&gt; * * *
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;15&lt;/span&gt; * * *
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;16&lt;/span&gt; * * *
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;17&lt;/span&gt; * * *
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;18&lt;/span&gt; * * *
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;19&lt;/span&gt; * * *&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;记录按序列号从 1 开始，每个纪录就是一跳 ，每跳表示一个网关，可以看到每行有三个时间，单位是 ms，之所以是 3 个，其实就是 &lt;code&gt;-q&lt;/code&gt; 的默认参数。&lt;/p&gt;
&lt;p&gt;探测数据包向每个网关发送三个数据包后，记录网关响应后返回的时间。&lt;/p&gt;
&lt;h3&gt;mtr&lt;span class="hx:absolute hx:-mt-20" id="mtr"&gt;&lt;/span&gt;
&lt;a href="#mtr" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;运行 &lt;code&gt;mtr&lt;/code&gt; 可以查看更详细的网络状态：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类别&lt;/th&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;协议/端口&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-T&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;TCP SYN 探测&lt;/td&gt;
&lt;td&gt;&lt;code&gt;mtr -T -P 443 1.1.1.1&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-u&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;UDP 探测&lt;/td&gt;
&lt;td&gt;&lt;code&gt;mtr -u -P 53 8.8.8.8&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-P&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定目标端口&lt;/td&gt;
&lt;td&gt;&lt;code&gt;mtr -T -P 443 1.1.1.1&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;输出格式&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-n&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不解析主机名（纯 IP）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;mtr -n 8.8.8.8&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-r&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;报告模式（一次性统计）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;mtr -r 8.8.8.8&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-c &amp;lt;N&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;发送 N 次探测后结束&lt;/td&gt;
&lt;td&gt;&lt;code&gt;mtr -r -c 100 8.8.8.8&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;时间控制&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-i &amp;lt;s&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;每次探测间隔（秒）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;mtr -i 0.5 8.8.8.8&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-p &amp;lt;s&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;同 &lt;code&gt;-i&lt;/code&gt;（兼容写法）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;mtr -p 0.5 8.8.8.8&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;TTL/跳数&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-m &amp;lt;N&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;最大跳数（默认 30）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;mtr -m 50 8.8.8.8&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;调试/帮助&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-4&lt;/code&gt; / &lt;code&gt;-6&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;强制 IPv4 / IPv6&lt;/td&gt;
&lt;td&gt;&lt;code&gt;mtr -4 8.8.8.8&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-h&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看全部选项&lt;/td&gt;
&lt;td&gt;&lt;code&gt;mtr -h&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;code&gt;mtr -n baidu.com&lt;/code&gt; 输出示例：&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; My traceroute &lt;span class="o"&gt;[&lt;/span&gt;v0.95&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;DESKTOP-DMAGDPE &lt;span class="o"&gt;(&lt;/span&gt;172.18.149.141&lt;span class="o"&gt;)&lt;/span&gt; -&amp;gt; bdidu.com &lt;span class="o"&gt;(&lt;/span&gt;76.223.54.146&lt;span class="o"&gt;)&lt;/span&gt; 2025-08-27T15:34:02+0800
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Keys: Help Display mode Restart statistics Order of fields quit
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; Packets Pings
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; Host Loss% Snt Last Avg Best Wrst StDev
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 1. 172.18.144.1 0.0% &lt;span class="m"&gt;9&lt;/span&gt; 0.6 0.7 0.2 1.5 0.4
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 2. 192.168.31.1 0.0% &lt;span class="m"&gt;9&lt;/span&gt; 2.1 2.5 1.5 4.2 1.0
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 3. 192.168.1.1 0.0% &lt;span class="m"&gt;9&lt;/span&gt; 4.0 3.3 2.1 4.0 0.6
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 4. 100.84.128.1 0.0% &lt;span class="m"&gt;9&lt;/span&gt; 6.4 8.7 5.4 19.5 4.2
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 5. &lt;span class="o"&gt;(&lt;/span&gt;waiting &lt;span class="k"&gt;for&lt;/span&gt; reply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 6. &lt;span class="o"&gt;(&lt;/span&gt;waiting &lt;span class="k"&gt;for&lt;/span&gt; reply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 7. &lt;span class="o"&gt;(&lt;/span&gt;waiting &lt;span class="k"&gt;for&lt;/span&gt; reply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 8. &lt;span class="o"&gt;(&lt;/span&gt;waiting &lt;span class="k"&gt;for&lt;/span&gt; reply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 9. 219.158.3.214 50.0% &lt;span class="m"&gt;9&lt;/span&gt; 30.4 31.1 30.2 32.7 1.2
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;10. 219.158.3.102 33.3% &lt;span class="m"&gt;9&lt;/span&gt; 62.7 61.7 60.3 62.7 0.9
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;11. 219.158.34.230 0.0% &lt;span class="m"&gt;9&lt;/span&gt; 86.4 88.9 85.4 107.6 7.6
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;12. &lt;span class="o"&gt;(&lt;/span&gt;waiting &lt;span class="k"&gt;for&lt;/span&gt; reply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;13. &lt;span class="o"&gt;(&lt;/span&gt;waiting &lt;span class="k"&gt;for&lt;/span&gt; reply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;14. &lt;span class="o"&gt;(&lt;/span&gt;waiting &lt;span class="k"&gt;for&lt;/span&gt; reply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;15. 52.93.8.41 0.0% &lt;span class="m"&gt;8&lt;/span&gt; 95.2 94.8 92.7 99.4 2.2
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;16. 52.93.8.18 0.0% &lt;span class="m"&gt;8&lt;/span&gt; 86.7 87.8 85.8 94.2 2.9
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;17. 76.223.54.146 0.0% &lt;span class="m"&gt;8&lt;/span&gt; 85.9 86.3 84.9 88.5 1.1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;mtr&lt;/code&gt; 输出列解读：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Loss%&lt;/code&gt;：丢包率。这是&lt;strong&gt;最重要的指标&lt;/strong&gt;，某一跳的丢包率突然升高，通常意味着该节点或链路有问题。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Host&lt;/code&gt;：主机名或 IP 地址。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Snt&lt;/code&gt;：发送的探测包数量。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Last&lt;/code&gt;：最近一次的延迟（毫秒）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Avg&lt;/code&gt;：平均延迟（毫秒）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Best&lt;/code&gt;：最佳延迟（毫秒）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Wrst&lt;/code&gt;：最差延迟（毫秒）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;StDev&lt;/code&gt;：延迟抖动（标准方差）。这个值越大，说明网络越不稳定。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;使用场景&lt;span class="hx:absolute hx:-mt-20" id="使用场景-1"&gt;&lt;/span&gt;
&lt;a href="#%e4%bd%bf%e7%94%a8%e5%9c%ba%e6%99%af-1" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h4&gt;&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 精确定位网络丢包和抖动问题（最核心的场景）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 运行后，观察哪一跳的 Loss% 开始出现并持续存在（而不是仅在最后一跳），这里就是问题点。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;mtr -n baidu.com
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 向目标发送100个包后生成报告&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 网络不稳定时，运行一段时间（几分钟）的 mtr，将报告保存下来，作为向运营商报障的有力证据。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;mtr -r -c &lt;span class="m"&gt;100&lt;/span&gt; -n example.com &amp;gt; mtr_report.log
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 只显示最重要的列：丢包率、平均延迟、最佳延迟、最差延迟&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;mtr -r -c &lt;span class="m"&gt;50&lt;/span&gt; -o &lt;span class="s2"&gt;&amp;#34;L ABW&amp;#34;&lt;/span&gt; -n 203.0.113.10&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;有些网络设备会限速或优先处理数据包而非 ICMP 应答，导致中间节点显示丢包，但最终目标不丢包&lt;/strong&gt;。这就需要经验来判断是真实丢包还是设备策略。&lt;/p&gt;
&lt;h3&gt;运维工作流&lt;span class="hx:absolute hx:-mt-20" id="运维工作流"&gt;&lt;/span&gt;
&lt;a href="#%e8%bf%90%e7%bb%b4%e5%b7%a5%e4%bd%9c%e6%b5%81" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 1. 使用 mtr 进行初步诊断，定位问题范围&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 使用 --tcp 和 -p 443 是为了模拟真实的 HTTPS 流量，更有可能穿透防火墙&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 观察几十秒到一分钟&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 发现：在第 8 跳（某个国际出口路由器）之后，Loss% 上升到 15%，Wrst 延迟超过 500ms。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;mtr -n --tcp -p &lt;span class="m"&gt;443&lt;/span&gt; example.com
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 2. 使用 traceroute 快速确认路径&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;traceroute -n -p &lt;span class="m"&gt;443&lt;/span&gt; example.com
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 3. 得出结论并提供证据&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 问题出在出国链路的第 8 跳节点附近，存在严重丢包和高延迟。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 保存 mtr 报告截图或文本&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;mtr 是绝大多数情况下的首选&lt;/strong&gt;。当你需要诊断网络慢、抖动、断线等质量问题时，优先使用 mtr。它能提供持续的数据，让你清晰看到丢包和延迟发生在哪一跳。&lt;/li&gt;
&lt;li&gt;当你只需要快速看一眼路由路径是否正常，或者在脚本中调用时，使用 traceroute。它的输出更简单，更适合自动化处理。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;tcpdump&lt;span class="hx:absolute hx:-mt-20" id="tcpdump"&gt;&lt;/span&gt;
&lt;a href="#tcpdump" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;</description></item><item><title>Git</title><link>https://shipengqi.github.io/devops-learn/docs/linux/09_git/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/linux/09_git/</guid><description/></item><item><title>NFS</title><link>https://shipengqi.github.io/devops-learn/docs/linux/10_nfs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/linux/10_nfs/</guid><description/></item><item><title/><link>https://shipengqi.github.io/devops-learn/docs/kubernetes/docker/01_namespace/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/kubernetes/docker/01_namespace/</guid><description/></item><item><title/><link>https://shipengqi.github.io/devops-learn/docs/kubernetes/docker/02_cgroups/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/kubernetes/docker/02_cgroups/</guid><description/></item><item><title/><link>https://shipengqi.github.io/devops-learn/docs/kubernetes/docker/03_rootfs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/kubernetes/docker/03_rootfs/</guid><description/></item><item><title/><link>https://shipengqi.github.io/devops-learn/docs/terraform/01_provider/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/terraform/01_provider/</guid><description/></item><item><title/><link>https://shipengqi.github.io/devops-learn/docs/terraform/02_state/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/terraform/02_state/</guid><description/></item><item><title/><link>https://shipengqi.github.io/devops-learn/docs/terraform/03_types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/terraform/03_types/</guid><description/></item><item><title/><link>https://shipengqi.github.io/devops-learn/docs/terraform/04_variables/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/terraform/04_variables/</guid><description/></item><item><title/><link>https://shipengqi.github.io/devops-learn/docs/terraform/05_output/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/terraform/05_output/</guid><description/></item><item><title/><link>https://shipengqi.github.io/devops-learn/docs/terraform/06_locals/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/terraform/06_locals/</guid><description/></item><item><title/><link>https://shipengqi.github.io/devops-learn/docs/terraform/08_data_source/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/terraform/08_data_source/</guid><description/></item><item><title/><link>https://shipengqi.github.io/devops-learn/docs/terraform/09_expression/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/terraform/09_expression/</guid><description/></item><item><title/><link>https://shipengqi.github.io/devops-learn/docs/terraform/10_override/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/devops-learn/docs/terraform/10_override/</guid><description/></item></channel></rss>